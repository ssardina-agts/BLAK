/*************************************************************
 * This file is generated by the JACK Development Environment.
 * Saved at: Thu Feb 21 17:28:43 EST 2002
 * WARNING: DO NOT EDIT THIS OR YOUR CHANGES MAY BE LOST
 *************************************************************/

import gui.Towers;

/* Documentation */

/**
   This is the main strategy used to stack discs. In short, this strategy
   is: stack the discs on pin 2, starting from the larger (#1) to end with 
   the smaller (#9). (Remember that, the larger a disc number, the smaller 
   the disc is).
*/

public plan DiscStacker extends Plan {

    #handles event StackDisc ev;

    static boolean
    relevant(StackDisc ev)
    {
        return true;
    }
    
    #posts event SolveDisc sd;
    #reads data Towers window;
    #reads data Order order;
    #reads data Top top;

    context()
    {
        true;
    }
    
    #reasoning method
    body()
    {
      logical int pin;
      pin.unify(2);
      for (int i = 1;(i < 10);i++ ){
        logical int disc;
        disc.unify(i);
        @subtask(sd.solve(disc,pin));
        System.out.println(((("Stacked disc " + disc) + " onto pin ") + pin));
        printStack();
      }
    }

    #reasoning method
    printStack()
    {
        System.out.println("---- Stacking state ----");
        for (int pin = 0;(pin < 3);pin++ ){
            logical int disc;
            System.out.print((("    Pin " + pin) + " - top to bottom: "));
            top.get(pin,disc);
            for (int i = disc.getValue();(i > 0);){
                logical int j;
                System.out.print((" " + i));
                order.get(i,j);
                i = j.getValue();
            }
            System.out.println("");
        }
    }
}

