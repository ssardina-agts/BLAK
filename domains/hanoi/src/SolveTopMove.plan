/*************************************************************
 * This file is generated by the JACK Development Environment.
 * Saved at: Thu Feb 21 17:28:42 EST 2002
 * WARNING: DO NOT EDIT THIS OR YOUR CHANGES MAY BE LOST
 *************************************************************/


/* Documentation */

/**
   This plan solves how to move a disc to a given pin when the disc is
   at the top of a pin, but not the right pin, though the right pin
   admits the disc.
*/

public plan SolveTopMove extends Plan {

    public int pid = 2;

    logical int pin;
    logical int disc;
    #handles event SolveDisc ev;
    #uses interface Player ag;

    public PlanInstanceInfo getInstanceInfo(){
        return new PlanIdInfo(pid, 0.5);
    }

    static boolean
    relevant(SolveDisc ev)
    {
        return (ev.alwaysApplies || ev.movable);
    }    
    
    #posts event MoveDisc md;
    #reads data Top top;

    context()
    {
        ev.alwaysApplies || (((top.get(pin,ev.disc) && !pin.unify(ev.pin)) && top.get(ev.pin,disc)) && (disc.getValue() < ev.disc.getValue()));
    }
    
    #reasoning method
    body()
    {
        if (((top.get(pin,ev.disc) && !pin.unify(ev.pin)) && top.get(ev.pin,disc)) && (disc.getValue() < ev.disc.getValue())) {
            @subtask(md.move(ev.disc,ev.pin));
        } else {
            false;
        }
    }

    #reasoning method
    pass() {
        if (ag.learningMode) {
            ag.record(pid,true,ev.disc.as_int(),ev.pin.as_int());
        }
    }
    #reasoning method
    fail() {
        if (ag.learningMode) {
            ag.record(pid,false,ev.disc.as_int(),ev.pin.as_int());
        }
    }

}

