/*************************************************************
 * This file is generated by the JACK Development Environment.
 * Saved at: Thu Feb 21 17:28:43 EST 2002
 * WARNING: DO NOT EDIT THIS OR YOUR CHANGES MAY BE LOST
 *************************************************************/

import aos.util.Properties;
import gui.Towers;

/* Documentation */

/**
   The Player agent solves the Towers of Hanoi puzzle.
   It has three capabilities:
   - DiscStacking, which includes initialising the puzzle and then
         provide the solution strategy;
   - Solving, which includes plans for solving the puzzle, i.e. which
         move to do next;
   - DiscMoving, which deals with actually moving discs.
**/

public agent Player extends Agent {
    #private data Order order(initfile);
    #private data Top top();
    #private data Place place();
    #private data Towers window("Towers of Hanoi");
    #has capability DiscStacking stacking;
    #has capability Solving solving;
    #has capability DiscMoving moving;

    // Constructor
    Player() {
        super("player");
    }
    
    public void setVisible(boolean show) {
        window.setVisible(show);
    }

    // This names the initialisation file for the Order relation.
    static String initfile = "init.dat";

    // Application entry point.
    public static void main(String[] args) {
        boolean show = false;
        if (args.length > 0) {
            int index = 0;
            while (index < args.length) {
                String arg = args[index];
                index++;
                char option = arg.charAt(1);
                switch (option) {
                case 'w':
                    show = true;
                    break;
                }
            }
        }
        System.out.println("Option: Setting GUI to "+show);
        args = Jak.initialize(args);
        Player p = new Player();
        p.setVisible(show);
      }
}

