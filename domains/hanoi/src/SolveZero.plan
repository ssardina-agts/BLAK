/*************************************************************
 * This file is generated by the JACK Development Environment.
 * Saved at: Thu Feb 21 17:28:42 EST 2002
 * WARNING: DO NOT EDIT THIS OR YOUR CHANGES MAY BE LOST
 *************************************************************/


/* Documentation */

/**
   This plan handles disc==0, i.e. "attempt moving the table"
*/

import agents.PlanNode;
import PlanIdInfo;

public plan SolveZero extends Plan {

    public int pid = 4;

    #handles event SolveDisc ev;
    #uses interface Player ag;

    public PlanInstanceInfo getInstanceInfo(){
        return ag.planInfo(pid, ev.state(), ev.level, 1/*nodeComplexity*/);
    }


    static boolean
    relevant(SolveDisc ev)
    {
        return (ev.alwaysApplies || !ev.movable);
    }
    
    #uses interface Solving env;

    context()
    {
        (ev.level > 0) && (ev.alwaysApplies || true);
    }

    #reasoning method
    body()
    {
        @test(!ev.movable,null);
    }

    #reasoning method
    pass() {
        if (ag.learningMode) {
            ag.planNodes[pid].setLastInstance(ev.state());
            ag.planNodes[pid].record(true,ev.level,(ev.level==ag.maxRecursion));
        }
    }
    #reasoning method
    fail() {
        if (ag.learningMode) {
            ag.planNodes[pid].setLastInstance(ev.state());
            ag.planNodes[pid].record(false,ev.level,(ev.level==ag.maxRecursion));
        }
    }
}

