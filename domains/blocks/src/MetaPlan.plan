import java.util.Random;

plan MetaPlan extends Plan
{
	#handles event PlanChoice ev;
	#chooses for event MoveEvent;

	#uses interface BWAgent ag;

	static boolean 
	relevant(PlanChoice ev)
	{
		return true;
	}

	context()
	{
		true;
	}
	body()
	{
		MoveEvent me = (MoveEvent) ev.event;	
		Random r = new Random ();		
		int rand = r.nextInt(ev.applicable.size()+1);
		String con = "0";
		String decon = "0";
		int subgoal = 0 ;
		Signature s;
		for (  s = ev.applicable.first();
		(s != null) ;
		s = ev.applicable.next( s )
		)
		{
			if (s.getPlanName().equals("ConstructivePlan"))
			{
				con = "1";
			}
			else if (s.getPlanName().equals("DeconstructivePlan"))
			{
				decon = "1";
			}
		}
		for (  s = ev.applicable.first();
		((s != null) && (rand > 1));
		s = ev.applicable.next( s )
		)
		{
			rand -- ;
		}
		if (s != null)
		{
			if (s.getPlanName().equals("ConstructivePlan"))
			{
				con = "2";
			}
			else if (s.getPlanName().equals("DeconstructivePlan"))
			{
				decon = "2";
			}
			subgoal = ag.goalsRemaining();
			String record = con + decon + subgoal;
			ag.records[ag.currentUsedRecord] = record;
			ag.currentUsedRecord++;
			ev.chosen = s;
		}
	}

}

