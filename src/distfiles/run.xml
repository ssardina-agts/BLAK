<?xml version="1.0" encoding="ISO-8859-1"?>

<!-- BLAK: BDI Learning Agent Kit -->
<project name="BLAK" basedir="." default="all">

<!-- USER CONFIG -->
<!-- Single option to control the iterations parameter for all tests -->
<property name="gnuplot.dep" value="gnuplot"/>
<property name="dot.dep" value="dot"/>
<property name="ps2pdf.dep" value="ps2pdf"/>
<property name="every" value="1"/>
<property name="range" value="[:]"/>
<!-- END USER CONFIG -->


<!-- Root directory that contains the BLAK distribution -->
<property name="root.dir" value="${basedir}"/>
<property name="scripts.dir" value="${root.dir}/scripts"/>
<property name="plot.sh" value="${scripts.dir}/plot.sh"/>
<property name="setFailureRecovery.sh" value="${scripts.dir}/setFailureRecovery.sh"/>

<property name="blak.dep" value="${root.dir}/lib/blak.jar"/>
<property name="specs.dir" value="${root.dir}/specs"/>
<property name="results.dir" value="${root.dir}/results"/>
<property name="results.all.dir" value="${results.dir}/all"/>

<property name="domains.dir" value="${basedir}/domains"/>
<property name="hanoi.dir" value="${domains.dir}/hanoi"/>
<property name="storage.dir" value="${domains.dir}/storage"/>


<!-- External dependencies. See README for installation instructions for JACK and WEKA -->
<property name="jack.dep" value="${root.dir}/lib/jack.jar"/>
<property name="weka.dep" value="${root.dir}/lib/weka.jar"/>

<!-- Standard subtree structure for indvidual tests -->
<property name="build.dir" value="build"/>
<property name="build.classes.dir" value="${build.dir}"/>
<property name="build.classes.plans.dir" value="${build.classes.dir}/plans"/>
<property name="build.classes.events.dir" value="${build.classes.dir}/events"/>
<property name="build.classes.agents.dir" value="${build.classes.dir}/agents"/>
<property name="build.sources.dir" value="${build.dir}"/>
<property name="build.sources.plans.dir" value="${build.sources.dir}/plans"/>
<property name="build.sources.events.dir" value="${build.sources.dir}/events"/>
<property name="build.sources.agents.dir" value="${build.sources.dir}/agents"/>

<!-- Default targets -->
<target name="all" description="Build, run and plot all tests" depends="aamas2010,misc"/>

<target name="aamas2010" description="Build, run and plot all tests used for the AAMAS2010 submission" depends="test01v3gm,test01v3gmt,test05v3gm,test05v3gmt,testImpactvars2,testMultiSolutionsR"/>

<target name="hycas2010" description="Build, run and plot all tests used for the HYCAS2010 submission" depends="hanoid5s1r8,hanoid5s3r8,hanoid5s5r8,hanoi5"/>

<target name="misc" description="Build, run and plot all miscellaneous tests" depends="testMultiSolutions,testEcai,testImpactvars,testImpactvars3,testDummyvars,test02v10gm,test03v5gm,test04v5gm,test01v1,test02v1,test03v1,test04v1,test05v1"/>

<target name="testMultiSolutionsR" description="Build, run and plot testMultiSolutionsR (Multiple Solutions with Goal Reuse)" depends="buildtestMultiSolutionsR,graphtestMultiSolutionsR,runtestMultiSolutionsR,plottestMultiSolutionsR"/>
<target name="testMultiSolutions" description="Build, run and plot testMultiSolutions (Multiple Solutions)" depends="buildtestMultiSolutions,graphtestMultiSolutions,runtestMultiSolutions,plottestMultiSolutions"/>

<target name="testEcai" description="Build, run and plot testEcai (Tests Stephane's tree)" depends="buildtestEcai,graphtestEcai,runtestEcai,plottestEcai"/>

<target name="testImpactvars" description="Build, run and plot testImpactvars (Tests impact of relevant variables)" depends="buildtestImpactvars,graphtestImpactvars,runtestImpactvars,plottestImpactvars"/>
<target name="testImpactvars2" description="Build, run and plot testImpactvars2 (Tests impact of relevant variables)" depends="buildtestImpactvars2,graphtestImpactvars2,runtestImpactvars2,plottestImpactvars2"/>
<target name="testImpactvars3" description="Build, run and plot testImpactvars3 (Tests impact of relevant variables)" depends="buildtestImpactvars3,graphtestImpactvars3,runtestImpactvars3,plottestImpactvars3"/>

<target name="testDummyvars" description="Build, run and plot testDummyvars (Tests impact of dummy variables)" depends="buildtestDummyvars,graphtestDummyvars,runtestDummyvars,plottestDummyvars"/>

<target name="test01v1"   description="Build, run and plot test01v1"   depends="buildtest01v1,  graphtest01v1,  runtest01v1,  plottest01v1"  />
<target name="test02v1"   description="Build, run and plot test02v1"   depends="buildtest02v1,  graphtest02v1,  runtest02v1,  plottest02v1"  />
<target name="test03v1"   description="Build, run and plot test03v1"   depends="buildtest03v1,  graphtest03v1,  runtest03v1,  plottest03v1"  />
<target name="test04v1"   description="Build, run and plot test04v1"   depends="buildtest04v1,  graphtest04v1,  runtest04v1,  plottest04v1"  />
<target name="test05v1"   description="Build, run and plot test05v1"   depends="buildtest05v1,  graphtest05v1,  runtest05v1,  plottest05v1"  />

<target name="test03bv5"  description="Build, run and plot test03bv5"  depends="buildtest03bv5, graphtest03bv5, runtest03bv5, plottest03bv5" />
<target name="test03bv5g" description="Build, run and plot test03bv5g" depends="buildtest03bv5g,graphtest03bv5g,runtest03bv5g,plottest03bv5g"/>

<target name="test01v10gm" description="Build, run and plot test01v10gm" depends="buildtest01v10gm,graphtest01v10gm,runtest01v10gm,plottest01v10gm"/>
<target name="test01v3gm"  description="Build, run and plot test01v3gm"  depends="buildtest01v3gm, graphtest01v3gm, runtest01v3gm, plottest01v3gm"/>
<target name="test01v3gmt" description="Build, run and plot test01v3gmt" depends="buildtest01v3gmt,graphtest01v3gmt,runtest01v3gmt,plottest01v3gmt"/>
<target name="test02v10gm" description="Build, run and plot test02v10gm" depends="buildtest02v10gm,graphtest02v10gm,runtest02v10gm,plottest02v10gm"/>
<target name="test03v5gm"  description="Build, run and plot test03v5gm"  depends="buildtest03v5gm, graphtest03v5gm, runtest03v5gm, plottest03v5gm"/>
<target name="test04v5gm"  description="Build, run and plot test04v5gm"  depends="buildtest04v5gm, graphtest04v5gm, runtest04v5gm, plottest04v5gm"/>
<target name="test05v3gm"  description="Build, run and plot test05v3gm"  depends="buildtest05v3gm, graphtest05v3gm, runtest05v3gm, plottest05v3gm"/>
<target name="test05v3gmt" description="Build, run and plot test05v3gmt" depends="buildtest05v3gmt,graphtest05v3gmt,runtest05v3gmt,plottest05v3gmt"/>
<target name="test05v5gm"  description="Build, run and plot test05v5gm"  depends="buildtest05v5gm, graphtest05v5gm, runtest05v5gm, plottest05v5gm"/>

<target name="testfr01a" description="Build, run and plot testfr01a" depends="buildtestfr01a,graphtestfr01a,runtestfr01a,plottestfr01a"/>
<target name="testfr01b" description="Build, run and plot testfr01b" depends="buildtestfr01b,graphtestfr01b,runtestfr01b,plottestfr01b"/>

<target name="testfr02a" description="Build, run and plot testfr02a" depends="buildtestfr02a,graphtestfr02a,runtestfr02a,plottestfr02a"/>
<target name="testfr02b" description="Build, run and plot testfr02b" depends="buildtestfr02b,graphtestfr02b,runtestfr02b,plottestfr02b"/>

<target name="hanoid5s5r8"     description="Build, run and plot hanoi"  depends="buildhanoid5s5r8, runhanoid5s5r8, plothanoid5s5r8"/>
<target name="hanoid5s5r8fr"     description="Build, run and plot hanoi"  depends="buildhanoid5s5r8fr, runhanoid5s5r8fr, plothanoid5s5r8fr"/>
<target name="hanoid5s3r8"     description="Build, run and plot hanoi"  depends="buildhanoid5s3r8, runhanoid5s3r8, plothanoid5s3r8"/>
<target name="hanoid5s3r8fr"     description="Build, run and plot hanoi"  depends="buildhanoid5s3r8fr, runhanoid5s3r8fr, plothanoid5s3r8fr"/>
<target name="hanoid5s1r8"     description="Build, run and plot hanoi"  depends="buildhanoid5s1r8, runhanoid5s1r8, plothanoid5s1r8"/>
<target name="hanoid5s1r8fr"     description="Build, run and plot hanoi"  depends="buildhanoid5s1r8fr, runhanoid5s1r8fr, plothanoid5s1r8fr"/>

<target name="hanoi5t"         description="Build, run and plot hanoi"  depends="buildhanoi5t, runhanoi5t, plothanoi5t"/>
<target name="hanoi5"          description="Build, run and plot hanoi"  depends="buildhanoi5, runhanoi5, plothanoi5"/>
<target name="hanoi5fr"          description="Build, run and plot hanoi"  depends="buildhanoi5fr, runhanoi5fr, plothanoi5fr"/>

<target name="storage1"    description="Build, run and plot storage1"  depends="buildstorage1, runstorage1, plotstorage1"/>


<!-- Clean -->
<target name="clean" description="Delete all build files">
	<delete includeemptydirs="true">
		<fileset dir="${results.dir}" includes="**/build/**"/>
	</delete>
</target>

<!-- Clean -->
<target name="cleanall" description="Delete all build and results files">
	<delete dir="${results.dir}"/>
</target>

<!-- Check for build dependencies -->
<target name="buildDependencies" unless="checked.buildDependencies">
	<available file="${jack.dep}" property="jack.available"/>
	<fail message="JACK installation not found at ${jack.dep}. See README for installation instructions." unless="jack.available"/>
	<available file="${weka.dep}" property="weka.available"/>
	<fail message="WEKA installation not found at ${weka.dep}. See README for installation instructions." unless="weka.available"/>
	<condition property="available.buildDependencies">
		<and>
			<isset property="jack.available"/>
			<isset property="weka.available"/>
		</and>
	</condition>
	<property name="checked.buildDependencies" value="true"/>
</target>

<!-- Check for GNUPlot -->
<target name="plotDependencies" unless="checked.plotDependencies">
	<exec executable="${gnuplot.dep}" searchpath="true" failifexecutionfails="false" resultproperty="available.plotDependencies">
		<arg value="-V"/>
	</exec>
	<property name="checked.plotDependencies" value="true"/>
</target>

<!-- Check for Graphviz -->
<target name="graphDependencies" unless="checked.graphDependencies">
	<exec executable="${dot.dep}" searchpath="true" failifexecutionfails="false" resultproperty="available.dot">
		<arg value="-V"/>
	</exec>
	<exec executable="${ps2pdf.dep}" searchpath="true" failifexecutionfails="false" resultproperty="available.ps2pdf"/>
	<condition property="available.graphDependencies">
		<and>
			<isset property="available.dot"/>
			<isset property="available.ps2pdf"/>
		</and>
	</condition>
	<property name="checked.graphDependencies" value="true"/>
</target>

<!-- Macro to fail if a test build is not found -->
<macrodef name="failIfBuildNotFound">
  <attribute name="test.name"/>
  <sequential>
    <fail message="Build not found: ${results.dir}/@{test.name}/${build.dir}/@{test.name}.jar">
	  <condition>
	    <not>
		  <available file="${results.dir}/@{test.name}/${build.dir}/@{test.name}.jar"/>
		</not>
	  </condition>
	</fail>
  </sequential>
</macrodef>

<!-- Macro to fail if test results not found -->
<macrodef name="failIfResultsNotFound">
  <attribute name="test.name"/>
  <sequential>
    <fail message="Results not found: ${results.all.dir}/@{test.name}**.csv">
	  <condition>
		<resourcecount when="less" count="1">
		  <fileset dir="${results.all.dir}" includes="@{test.name}**.csv"/>
		</resourcecount>
	  </condition>
	</fail>
  </sequential>
</macrodef>

<!-- Macro to build a test subtree structure -->
<macrodef name="makeTestTree">
  <attribute name="make.dir"/>
  <sequential>
	<mkdir dir="@{make.dir}/${build.classes.agents.dir}"/>
	<mkdir dir="@{make.dir}/${build.classes.events.dir}"/>
	<mkdir dir="@{make.dir}/${build.classes.plans.dir}"/>
	<mkdir dir="@{make.dir}/${build.sources.agents.dir}"/>
	<mkdir dir="@{make.dir}/${build.sources.events.dir}"/>
	<mkdir dir="@{make.dir}/${build.sources.plans.dir}"/>
  </sequential>
</macrodef>

<!-- Macro to generate JACK sources -->
<macrodef name="generateJACK">
  <attribute name="make.dir"/>
  <attribute name="specs.file"/>
  <sequential>
	<java fork="yes" classname="expGenerator.ExpGenerator" failonerror="true">
		<arg line="-i @{specs.file}  -o @{make.dir}/${build.sources.dir}"/>
		<classpath>
			<pathelement location="${blak.dep}"/>
			<pathelement location="${jack.dep}"/>
			<pathelement location="${weka.dep}"/>
		</classpath>
	</java>
  </sequential>
</macrodef>

<!-- Marco to compile JACK sources -->
<macrodef name="compileJACK">
  <attribute name="make.dir"/>
  <attribute name="in.dir" default="@{make.dir}/${build.sources.dir}"/>
  <attribute name="opts" default=""/>
  <sequential>
	<java fork="yes" maxmemory="1g" classname="aos.main.JackBuild" failonerror="true">
		<arg line="-cp ${jack.dep}:${weka.dep}:${blak.dep}:@{make.dir}/${build.sources.dir} -wd @{in.dir} -r -d @{make.dir}/${build.sources.dir} @{opts} -DJAVACARGS=-g"/>
		<classpath>
			<pathelement location="${blak.dep}"/>
			<pathelement location="${jack.dep}"/>
			<pathelement location="${weka.dep}"/>
		</classpath>
	</java>
  </sequential>
</macrodef>

<!-- Macro to build test JAR -->
<macrodef name="makeJAR">
  <attribute name="test.name"/>
  <attribute name="make.dir"/>
  <sequential>
	<jar destfile="@{make.dir}/${build.dir}/@{test.name}.jar" basedir="@{make.dir}/${build.dir}" includes="agents/*.class trees/*.class events/*.class plans/*.class"/>
  </sequential>
</macrodef>

<!-- Macro to build the specified test -->
<macrodef name="buildTest">
  <attribute name="test.name"/>
  <attribute name="specs.file"/>
  <sequential>
	<makeTestTree make.dir="${results.dir}/@{test.name}"/>
	<generateJACK make.dir="${results.dir}/@{test.name}" specs.file="@{specs.file}"/>
	<compileJACK make.dir="${results.dir}/@{test.name}"/>
	<makeJAR test.name="@{test.name}" make.dir="${results.dir}/@{test.name}"/>
  </sequential>
</macrodef>

<!-- Macro to delete all build files for a specified test -->
<macrodef name="cleanTest">
  <attribute name="test.name"/>
  <sequential>
	<delete dir="${results.dir}/@{test.name}/${build.dir}"/>
  </sequential>
</macrodef>

<!-- Macro to draw the input tree -->
<macrodef name="graphInput">
  <attribute name="test.name"/>
  <sequential>
	<exec executable="dot" failonerror="true">
		<arg value="-Tps"/>
		<arg value="-o"/>
		<arg value="${results.dir}/@{test.name}/${build.dir}/graphviz/@{test.name}.gptree.ps"/>
		<arg value="${results.dir}/@{test.name}/${build.dir}/graphviz/gptree.dot"/>
	</exec>
	<exec executable="ps2pdf" failonerror="true">
		<arg value="-sPAPERSIZE=a4"/>
		<arg value="-dPDFSETTINGS=/printer"/>
		<arg value="-dCompatibilityLevel=1.4"/>
		<arg value="-dMaxSubsetPct=0"/>
		<arg value="-dSubsetFonts=false"/>
		<arg value="-dEmbedAllFonts=true"/>
		<arg value="${results.dir}/@{test.name}/${build.dir}/graphviz/@{test.name}.gptree.ps"/>
		<arg value="${results.dir}/@{test.name}/${build.dir}/graphviz/@{test.name}.gptree.pdf"/>
	</exec>
  </sequential>
</macrodef>

<!-- Macro to run a test -->
<macrodef name="runTest">
  <attribute name="test.name"/>
  <attribute name="run.mode"/>
  <attribute name="run.class" default="agents.Environment"/>
  <attribute name="run.select" default=""/>
  <attribute name="run.id" default="1"/>
  <attribute name="run.params"/>
  <sequential>
	<mkdir dir="${results.dir}/@{test.name}/@{run.mode}-@{run.select}-@{run.id}"/>
	<tstamp prefix="start.@{test.name}-@{run.mode}-@{run.select}-@{run.id}"/>
	<echo level="info" message="${start.@{test.name}-@{run.mode}-@{run.select}-@{run.id}.DSTAMP}.${start.@{test.name}-@{run.mode}-@{run.select}-@{run.id}.TSTAMP}: Started @{test.name}/@{run.mode}-@{run.select}-@{run.id}"/>
	<java fork="yes"  maxmemory="1g" classname="@{run.class}" failonerror="true" output="${results.dir}/@{test.name}/@{run.mode}-@{run.select}-@{run.id}/stdout.log">
		<arg line="-d ${results.dir}/@{test.name}/@{run.mode}-@{run.select}-@{run.id} -o @{test.name}-@{run.mode}-@{run.select}-@{run.id} -u @{run.mode} -s @{run.select} @{run.params}"/>
		<classpath>
			<pathelement location="${jack.dep}"/>
			<pathelement location="${weka.dep}"/>
			<pathelement location="${blak.dep}"/>
			<pathelement location="${results.dir}/@{test.name}/${build.dir}/@{test.name}.jar"/>
		</classpath>
	</java>
	<mkdir dir="${results.all.dir}"/>
	<copy file="${results.dir}/@{test.name}/@{run.mode}-@{run.select}-@{run.id}/@{test.name}-@{run.mode}-@{run.select}-@{run.id}-episodes.csv" todir="${results.all.dir}" flatten="true" failonerror="false"/>
	<copy file="${results.dir}/@{test.name}/@{run.mode}-@{run.select}-@{run.id}/@{test.name}-@{run.mode}-@{run.select}-@{run.id}-topgoal.csv" todir="${results.all.dir}" flatten="true"  failonerror="false"/>
  </sequential>
</macrodef>

<!-- Macro to run a test N times -->
<macrodef name="runTestRepeats">
  <attribute name="test.name"/>
  <attribute name="run.mode"/>
  <attribute name="run.class" default="agents.Environment"/>
  <attribute name="run.select"/>
  <attribute name="run.params"/>
  <sequential>
	<runTest test.name="@{test.name}" run.mode="@{run.mode}" run.class="@{run.class}" run.select="@{run.select}" run.id="1" run.params="@{run.params}"/>
	<runTest test.name="@{test.name}" run.mode="@{run.mode}" run.class="@{run.class}" run.select="@{run.select}" run.id="2" run.params="@{run.params}"/>
	<runTest test.name="@{test.name}" run.mode="@{run.mode}" run.class="@{run.class}" run.select="@{run.select}" run.id="3" run.params="@{run.params}"/>
	<runTest test.name="@{test.name}" run.mode="@{run.mode}" run.class="@{run.class}" run.select="@{run.select}" run.id="4" run.params="@{run.params}"/>
	<runTest test.name="@{test.name}" run.mode="@{run.mode}" run.class="@{run.class}" run.select="@{run.select}" run.id="5" run.params="@{run.params}"/>
  </sequential>
</macrodef>

<!-- Generic target to plot results of an experiment -->
<macrodef name="plotResult">
  <attribute name="test.name"/>
  <attribute name="range" default="[:]"/>
  <attribute name="every" default="1"/>
  <attribute name="window" default="100"/>
  <attribute name="label" default="@{test.name}"/>
  <attribute name="key1" default="bottom"/>
  <attribute name="key2" default="right"/>
  <sequential>
	<exec executable="${plot.sh}">
		<arg value="-t"/>
		<arg value="@{test.name}"/>
		<arg value="-d"/>
		<arg value="${results.all.dir}"/>
		<arg value="-o"/>
		<arg value="${results.all.dir}/@{test.name}.pdf"/>
		<arg value="-r"/>
		<arg value="@{range}"/>
		<arg value="-e"/>
		<arg value="@{every}"/>
		<arg value="-w"/>
		<arg value="@{window}"/>
		<arg value="-l"/>
		<arg value="@{label}"/>
		<arg value="-j"/>
		<arg value="@{key1}"/>
		<arg value="-k"/>
		<arg value="@{key2}"/>
	</exec>
  </sequential>
</macrodef>

<!-- Generic target to set failure recovery option in source file -->
<macrodef name="setFailureRecovery">
  <attribute name="srcfile" default=""/>
  <attribute name="value" default="never"/>
  <sequential>
	<exec executable="${setFailureRecovery.sh}">
		<arg value="-f"/>
		<arg value="@{srcfile}"/>
		<arg value="-o"/>
		<arg value="@{value}"/>
	</exec>
  </sequential>
</macrodef>


<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- BEGIN TESTS (Add new tests targets here) ~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->


<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- test01v1 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtest01v1" description="Build test01v1" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="test01v1"/>
	<buildTest test.name="test01v1" specs.file="${specs.dir}/test01/test01v1.txt"/>
</target>
<target name="graphtest01v1" description="Graph test01v1" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="test01v1"/>
</target>
<target name="runtest01v1" description="Run test01v1">
    <failIfBuildNotFound test.name="test01v1"/>
	<runTestRepeats test.name="test01v1" run.mode="concurrent" run.select="coverage"      run.params="-n 0.1 -i 2500"/>
	<runTestRepeats test.name="test01v1" run.mode="concurrent" run.select="probabilistic" run.params="-n 0.1 -i 2500"/>
	<runTestRepeats test.name="test01v1" run.mode="stable"     run.select="coverage"      run.params="-n 0.1 -i 2500 -k 3 -e 0.3"/>
	<runTestRepeats test.name="test01v1" run.mode="stable"     run.select="probabilistic" run.params="-n 0.1 -i 2500 -k 3 -e 0.3"/>
</target>
<target name="plottest01v1" description="Plot test01v1" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="test01v1"/>
	<plotResult test.name="test01v1" every="250" label="test01v1:n=0.1,k=3,e=0.3:test01v1.txt"/>
</target>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- test01v3gm ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtest01v3gm" description="Build test01v3gm" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="test01v3gm"/>
	<buildTest test.name="test01v3gm" specs.file="${specs.dir}/test01/test01v3gm.txt"/>
</target>
<target name="graphtest01v3gm" description="Graph test01v3gm" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="test01v3gm"/>
</target>
<target name="runtest01v3gm" description="Run test01v3gm">
    <failIfBuildNotFound test.name="test01v3gm"/>
	<runTestRepeats test.name="test01v3gm" run.mode="concurrent" run.select="coverage"      run.params="-n 0.1 -i 3500"/>
	<runTestRepeats test.name="test01v3gm" run.mode="concurrent" run.select="probabilistic" run.params="-n 0.1 -i 3500"/>
	<runTestRepeats test.name="test01v3gm" run.mode="stable"     run.select="coverage"      run.params="-n 0.1 -i 3500 -k 3 -e 0.3"/>
	<runTestRepeats test.name="test01v3gm" run.mode="stable"     run.select="probabilistic" run.params="-n 0.1 -i 3500 -k 3 -e 0.3"/>
	<runTestRepeats test.name="test01v3gm" run.mode="concurrent" run.select="confidence"    run.params="-n 0.1 -i 3500 -k 3 -e 0.3 -v 5 -w 5 -a 0.5"/>
</target>
<target name="plottest01v3gm" description="Plot test01v3gm" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="test01v3gm"/>
	<plotResult test.name="test01v3gm" every="200" key1="top" key2="left" label="test01v3gm:n=0.1,k=3,e=0.3:test01v3gm.txt"/>
</target>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- test01v3gmt ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtest01v3gmt" description="Build test01v3gmt" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="test01v3gmt"/>
	<buildTest test.name="test01v3gmt" specs.file="${specs.dir}/test01/test01v3gm.txt"/>
</target>
<target name="graphtest01v3gmt" description="Graph test01v3gmt" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="test01v3gmt"/>
</target>
<target name="runtest01v3gmt" description="Run test01v3gmt">
    <failIfBuildNotFound test.name="test01v3gmt"/>
	<runTestRepeats test.name="test01v3gmt" run.mode="concurrent" run.select="coverage"      run.params="-n 0.0 -i 3500 -t 0.2 -b 0.01"/>
	<runTestRepeats test.name="test01v3gmt" run.mode="concurrent" run.select="probabilistic" run.params="-n 0.0 -i 3500 -t 0.2"/>
	<runTestRepeats test.name="test01v3gmt" run.mode="stable"     run.select="coverage"      run.params="-n 0.0 -i 3500 -k 3 -e 0.3 -t 0.2 -b 0.01"/>
	<runTestRepeats test.name="test01v3gmt" run.mode="stable"     run.select="probabilistic" run.params="-n 0.0 -i 3500 -k 3 -e 0.3 -t 0.2"/>
	<runTestRepeats test.name="test01v3gmt" run.mode="concurrent" run.select="confidence"    run.params="-n 0.0 -i 3500 -k 3 -e 0.3 -t 0.2 -b 0.01 -v 5 -w 5 -a 0.5"/>
</target>
<target name="plottest01v3gmt" description="Plot test01v3gmt" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="test01v3gmt"/>
	<plotResult test.name="test01v3gmt" every="200" key1="top" key2="left" label="test01v3gmt:n=0.0,k=3,e=0.3,t=0.2:test01v3gm.txt"/>
</target>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- test01v10gm ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtest01v10gm" description="Build test01v10gm" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="test01v10gm"/>
	<buildTest test.name="test01v10gm" specs.file="${specs.dir}/test01/test01v10gm.txt"/>
</target>
<target name="graphtest01v10gm" description="Graph test01v10gm" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="test01v10gm"/>
</target>
<target name="runtest01v10gm" description="Run test01v10gm">
    <failIfBuildNotFound test.name="test01v10gm"/>
	<runTestRepeats test.name="test01v10gm" run.mode="concurrent" run.select="coverage"      run.params="-n 0.1 -i 7000"/>
	<runTestRepeats test.name="test01v10gm" run.mode="concurrent" run.select="probabilistic" run.params="-n 0.1 -i 7000"/>
	<runTestRepeats test.name="test01v10gm" run.mode="stable"     run.select="coverage"      run.params="-n 0.1 -i 7000 -k 3 -e 0.3"/>
	<runTestRepeats test.name="test01v10gm" run.mode="stable"     run.select="probabilistic" run.params="-n 0.1 -i 7000 -k 3 -e 0.3"/>
</target>
<target name="plottest01v10gm" description="Plot test01v10gm" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="test01v10gm"/>
	<plotResult test.name="test01v10gm" every="700" key1="top" key2="right" label="test01v10gm:n=0.1,k=3,e=0.3:test01v10gm.txt"/>
</target>


<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- test02v1 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtest02v1" description="Build test02v1" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="test02v1"/>
	<buildTest test.name="test02v1" specs.file="${specs.dir}/test02/test02v1.txt"/>
</target>
<target name="graphtest02v1" description="Graph test02v1" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="test02v1"/>
</target>
<target name="runtest02v1" description="Run test02v1">
    <failIfBuildNotFound test.name="test02v1"/>
	<runTestRepeats test.name="test02v1" run.mode="concurrent" run.select="coverage"      run.params="-n 0.1 -i 4000"/>
	<runTestRepeats test.name="test02v1" run.mode="concurrent" run.select="probabilistic" run.params="-n 0.1 -i 4000"/>
	<runTestRepeats test.name="test02v1" run.mode="stable"     run.select="coverage"      run.params="-n 0.1 -i 4000 -k 3 -e 0.3"/>
	<runTestRepeats test.name="test02v1" run.mode="stable"     run.select="probabilistic" run.params="-n 0.1 -i 4000 -k 3 -e 0.3"/>
</target>
<target name="plottest02v1" description="Plot test02v1" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="test02v1"/>
	<plotResult test.name="test02v1" every="400" label="test02v1:n=0.1,k=3,e=0.3:test02v1.txt"/>
</target>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- test02v10gm ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtest02v10gm" description="Build test02v10gm" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="test02v10gm"/>
	<buildTest test.name="test02v10gm" specs.file="${specs.dir}/test02/test02v10gm.txt"/>
</target>
<target name="graphtest02v10gm" description="Graph test02v10gm" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="test02v10gm"/>
</target>
<target name="runtest02v10gm" description="Run test02v10gm">
    <failIfBuildNotFound test.name="test02v10gm"/>
	<runTestRepeats test.name="test02v10gm" run.mode="concurrent" run.select="coverage"      run.params="-n 0.1 -i 4000"/>
	<runTestRepeats test.name="test02v10gm" run.mode="concurrent" run.select="probabilistic" run.params="-n 0.1 -i 4000"/>
	<runTestRepeats test.name="test02v10gm" run.mode="stable"     run.select="coverage"      run.params="-n 0.1 -i 4000 -k 3 -e 0.3"/>
	<runTestRepeats test.name="test02v10gm" run.mode="stable"     run.select="probabilistic" run.params="-n 0.1 -i 4000 -k 3 -e 0.3"/>
</target>
<target name="plottest02v10gm" description="Plot test02v10gm" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="test02v10gm"/>
	<plotResult test.name="test02v10gm" every="400" key1="top" key2="right" label="test02v10gm:n=0.1,k=3,e=0.3:test02v10gm.txt"/>
</target>


<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- test03v1 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtest03v1" description="Build test03v1" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="test03v1"/>
	<buildTest test.name="test03v1" specs.file="${specs.dir}/test03/test03v1.txt"/>
</target>
<target name="graphtest03v1" description="Graph test03v1" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="test03v1"/>
</target>
<target name="runtest03v1" description="Run test03v1">
    <failIfBuildNotFound test.name="test03v1"/>
	<runTestRepeats test.name="test03v1" run.mode="concurrent" run.select="coverage"      run.params="-n 0.1 -i 2000"/>
	<runTestRepeats test.name="test03v1" run.mode="concurrent" run.select="probabilistic" run.params="-n 0.1 -i 2000"/>
	<runTestRepeats test.name="test03v1" run.mode="stable"     run.select="coverage"      run.params="-n 0.1 -i 2000 -k 3 -e 0.3"/>
	<runTestRepeats test.name="test03v1" run.mode="stable"     run.select="probabilistic" run.params="-n 0.1 -i 2000 -k 3 -e 0.3"/>
</target>
<target name="plottest03v1" description="Plot test03v1" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="test03v1"/>
	<plotResult test.name="test03v1" every="200" label="test03v1:n=0.1,k=3,e=0.3:test03v1.txt"/>
</target>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- test03v5gm ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtest03v5gm" description="Build test03v5gm" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="test03v5gm"/>
	<buildTest test.name="test03v5gm" specs.file="${specs.dir}/test03/test03v5gm.txt"/>
</target>
<target name="graphtest03v5gm" description="Graph test03v5gm" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="test03v5gm"/>
</target>
<target name="runtest03v5gm" description="Run test03v5gm">
    <failIfBuildNotFound test.name="test03v5gm"/>
	<runTestRepeats test.name="test03v5gm" run.mode="concurrent" run.select="coverage"      run.params="-n 0.1 -i 5000"/>
	<runTestRepeats test.name="test03v5gm" run.mode="concurrent" run.select="probabilistic" run.params="-n 0.1 -i 5000"/>
	<runTestRepeats test.name="test03v5gm" run.mode="stable"     run.select="coverage"      run.params="-n 0.1 -i 5000 -k 3 -e 0.3"/>
	<runTestRepeats test.name="test03v5gm" run.mode="stable"     run.select="probabilistic" run.params="-n 0.1 -i 5000 -k 3 -e 0.3"/>
</target>
<target name="plottest03v5gm" description="Plot test03v5gm" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="test03v5gm"/>
	<plotResult test.name="test03v5gm" every="500" key1="top" key2="right" label="test03v5gm:n=0.1,k=3,e=0.3:test03v5gm.txt"/>
</target>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- test03bv5 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtest03bv5" description="Build test03bv5" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="test03bv5"/>
	<buildTest test.name="test03bv5" specs.file="${specs.dir}/test03/test03bv5.txt"/>
</target>
<target name="graphtest03bv5" description="Graph test03bv5" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="test03bv5"/>
</target>
<target name="runtest03bv5" description="Run test03bv5">
    <failIfBuildNotFound test.name="test03bv5"/>
	<runTestRepeats test.name="test03bv5" run.mode="concurrent" run.select="coverage"      run.params="-n 0.1 -i 5000"/>
	<runTestRepeats test.name="test03bv5" run.mode="concurrent" run.select="probabilistic" run.params="-n 0.1 -i 5000"/>
	<runTestRepeats test.name="test03bv5" run.mode="stable"     run.select="coverage"      run.params="-n 0.1 -i 5000 -k 3 -e 0.3"/>
	<runTestRepeats test.name="test03bv5" run.mode="stable"     run.select="probabilistic" run.params="-n 0.1 -i 5000 -k 3 -e 0.3"/>
</target>
<target name="plottest03bv5" description="Plot test03bv5" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="test03bv5"/>
	<plotResult test.name="test03bv5" every="500" label="test03bv5:n=0.1,k=3,e=0.3:test03bv5.txt"/>
</target>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- test03bv5g ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtest03bv5g" description="Build test03bv5g" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="test03bv5g"/>
	<buildTest test.name="test03bv5g" specs.file="${specs.dir}/test03/test03bv5g.txt"/>
</target>
<target name="graphtest03bv5g" description="Graph test03bv5g" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="test03bv5g"/>
</target>
<target name="runtest03bv5g" description="Run test03bv5g">
    <failIfBuildNotFound test.name="test03bv5g"/>
	<runTestRepeats test.name="test03bv5g" run.mode="concurrent" run.select="coverage"      run.params="-n 0.1 -i 5000"/>
	<runTestRepeats test.name="test03bv5g" run.mode="concurrent" run.select="probabilistic" run.params="-n 0.1 -i 5000"/>
	<runTestRepeats test.name="test03bv5g" run.mode="stable"     run.select="coverage"      run.params="-n 0.1 -i 5000 -k 3 -e 0.3"/>
	<runTestRepeats test.name="test03bv5g" run.mode="stable"     run.select="probabilistic" run.params="-n 0.1 -i 5000 -k 3 -e 0.3"/>
</target>
<target name="plottest03bv5g" description="Plot test03bv5g" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="test03bv5g"/>
	<plotResult test.name="test03bv5g" every="500" label="test03bv5g:n=0.1,k=3,e=0.3:test03bv5g.txt"/>
</target>


<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- test04v1 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtest04v1" description="Build test04v1" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="test04v1"/>
	<buildTest test.name="test04v1" specs.file="${specs.dir}/test04/test04v1.txt"/>
</target>
<target name="graphtest04v1" description="Graph test04v1" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="test04v1"/>
</target>
<target name="runtest04v1" description="Run test04v1">
    <failIfBuildNotFound test.name="test04v1"/>
	<runTestRepeats test.name="test04v1" run.mode="concurrent" run.select="coverage"      run.params="-n 0.1 -i 4000"/>
	<runTestRepeats test.name="test04v1" run.mode="concurrent" run.select="probabilistic" run.params="-n 0.1 -i 4000"/>
	<runTestRepeats test.name="test04v1" run.mode="stable"     run.select="coverage"      run.params="-n 0.1 -i 4000 -k 3 -e 0.3"/>
	<runTestRepeats test.name="test04v1" run.mode="stable"     run.select="probabilistic" run.params="-n 0.1 -i 4000 -k 3 -e 0.3"/>
</target>
<target name="plottest04v1" description="Plot test04v1" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="test04v1"/>
	<plotResult test.name="test04v1" every="400" label="test04v1:n=0.1,k=3,e=0.3:test04v1.txt"/>
</target>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- test04v5gm ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtest04v5gm" description="Build test04v5gm" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="test04v5gm"/>
	<buildTest test.name="test04v5gm" specs.file="${specs.dir}/test04/test04v5gm.txt"/>
</target>
<target name="graphtest04v5gm" description="Graph test04v5gm" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="test04v5gm"/>
</target>
<target name="runtest04v5gm" description="Run test04v5gm">
    <failIfBuildNotFound test.name="test04v5gm"/>
	<runTestRepeats test.name="test04v5gm" run.mode="concurrent" run.select="coverage"      run.params="-n 0.1 -i 4000"/>
	<runTestRepeats test.name="test04v5gm" run.mode="concurrent" run.select="probabilistic" run.params="-n 0.1 -i 4000"/>
	<runTestRepeats test.name="test04v5gm" run.mode="stable"     run.select="coverage"      run.params="-n 0.1 -i 4000 -k 3 -e 0.3"/>
	<runTestRepeats test.name="test04v5gm" run.mode="stable"     run.select="probabilistic" run.params="-n 0.1 -i 4000 -k 3 -e 0.3"/>
</target>
<target name="plottest04v5gm" description="Plot test04v5gm" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="test04v5gm"/>
	<plotResult test.name="test04v5gm" every="400" label="test04v5gm:n=0.1,k=3,e=0.3:test04v5gm.txt"/>
</target>


<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- test05v1 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtest05v1" description="Build test05v1" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="test05v1"/>
	<buildTest test.name="test05v1" specs.file="${specs.dir}/test05/test05v1.txt"/>
</target>
<target name="graphtest05v1" description="Graph test05v1" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="test05v1"/>
</target>
<target name="runtest05v1" description="Run test05v1">
    <failIfBuildNotFound test.name="test05v1"/>
	<runTestRepeats test.name="test05v1" run.mode="concurrent" run.select="coverage"      run.params="-n 0.1 -i 4000"/>
	<runTestRepeats test.name="test05v1" run.mode="concurrent" run.select="probabilistic" run.params="-n 0.1 -i 4000"/>
	<runTestRepeats test.name="test05v1" run.mode="stable"     run.select="coverage"      run.params="-n 0.1 -i 4000 -k 3 -e 0.3"/>
	<runTestRepeats test.name="test05v1" run.mode="stable"     run.select="probabilistic" run.params="-n 0.1 -i 4000 -k 3 -e 0.3"/>
</target>
<target name="plottest05v1" description="Plot test05v1" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="test05v1"/>
	<plotResult test.name="test05v1" every="400" key1="top" key2="right" label="test05v1:n=0.1,k=3,e=0.3:test05v1.txt"/>
</target>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- test05v5gm ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtest05v5gm" description="Build test05v5gm" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="test05v5gm"/>
	<buildTest test.name="test05v5gm" specs.file="${specs.dir}/test05/test05v5gm.txt"/>
</target>
<target name="graphtest05v5gm" description="Graph test05v5gm" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="test05v5gm"/>
</target>
<target name="runtest05v5gm" description="Run test05v5gm">
    <failIfBuildNotFound test.name="test05v5gm"/>
	<runTestRepeats test.name="test05v5gm" run.mode="concurrent" run.select="coverage"      run.params="-n 0.1 -i 5000"/>
	<runTestRepeats test.name="test05v5gm" run.mode="concurrent" run.select="probabilistic" run.params="-n 0.1 -i 5000"/>
	<runTestRepeats test.name="test05v5gm" run.mode="stable"     run.select="coverage"      run.params="-n 0.1 -i 5000 -k 3 -e 0.3"/>
	<runTestRepeats test.name="test05v5gm" run.mode="stable"     run.select="probabilistic" run.params="-n 0.1 -i 5000 -k 3 -e 0.3"/>
</target>
<target name="plottest05v5gm" description="Plot test05v5gm" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="test05v5gm"/>
	<plotResult test.name="test05v5gm" every="500" key1="top" key2="right" label="test05v5gm:n=0.1,k=3,e=0.3:test05v5gm.txt"/>
</target>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- test05v3gm ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtest05v3gm" description="Build test05v3gm" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="test05v3gm"/>
	<buildTest test.name="test05v3gm" specs.file="${specs.dir}/test05/test05v3gm.txt"/>
</target>
<target name="graphtest05v3gm" description="Graph test05v3gm" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="test05v3gm"/>
</target>
<target name="runtest05v3gm" description="Run test05v3gm">
    <failIfBuildNotFound test.name="test05v3gm"/>
	<runTestRepeats test.name="test05v3gm" run.mode="concurrent" run.select="coverage"      run.params="-n 0.1 -i 3000"/>
	<runTestRepeats test.name="test05v3gm" run.mode="concurrent" run.select="probabilistic" run.params="-n 0.1 -i 3000"/>
	<runTestRepeats test.name="test05v3gm" run.mode="stable"     run.select="coverage"      run.params="-n 0.1 -i 3000 -k 3 -e 0.3"/>
	<runTestRepeats test.name="test05v3gm" run.mode="stable"     run.select="probabilistic" run.params="-n 0.1 -i 3000 -k 3 -e 0.3"/>
	<runTestRepeats test.name="test05v3gm" run.mode="concurrent" run.select="confidence"    run.params="-n 0.1 -i 3000 -k 3 -e 0.3 -v 5 -w 5 -a 0.5"/>
</target>
<target name="plottest05v3gm" description="Plot test05v3gm" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="test05v3gm"/>
	<plotResult test.name="test05v3gm" every="300" key1="top" key2="right" label="test05v3gm:n=0.1,k=3,e=0.3:test05v3gm.txt"/>
</target>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- test05v3gmt ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtest05v3gmt" description="Build test05v3gmt" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="test05v3gmt"/>
	<buildTest test.name="test05v3gmt" specs.file="${specs.dir}/test05/test05v3gm.txt"/>
</target>
<target name="graphtest05v3gmt" description="Graph test05v3gmt" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="test05v3gmt"/>
</target>
<target name="runtest05v3gmt" description="Run test05v3gmt">
    <failIfBuildNotFound test.name="test05v3gmt"/>
	<runTestRepeats test.name="test05v3gmt" run.mode="concurrent" run.select="coverage"      run.params="-n 0.0 -i 3000 -t 0.2 -b 0.01"/>
	<runTestRepeats test.name="test05v3gmt" run.mode="concurrent" run.select="probabilistic" run.params="-n 0.0 -i 3000 -t 0.2"/>
	<runTestRepeats test.name="test05v3gmt" run.mode="stable"     run.select="coverage"      run.params="-n 0.0 -i 3000 -k 3 -e 0.1 -t 0.2 -b 0.01"/>
	<runTestRepeats test.name="test05v3gmt" run.mode="stable"     run.select="probabilistic" run.params="-n 0.0 -i 3000 -k 3 -e 0.1 -t 0.2"/>
	<runTestRepeats test.name="test05v3gmt" run.mode="concurrent" run.select="confidence"    run.params="-n 0.0 -i 3000 -k 3 -e 0.1 -t 0.2 -b 0.01 -v 5 -w 5 -a 0.5"/>
</target>
<target name="plottest05v3gmt" description="Plot test05v3gmt" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="test05v3gmt"/>
	<plotResult test.name="test05v3gmt" every="300" key1="center" key2="right" label="test05v3gmt:n=0.0,k=3,e=0.1,t=0.2:test05v3gm.txt"/>
</target>


<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- testEcai ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtestEcai" description="Build testEcai" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="testEcai"/>
	<buildTest test.name="testEcai" specs.file="${specs.dir}/testEcai/ecai.txt"/>
</target>
<target name="graphtestEcai" description="Graph testEcai" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="testEcai"/>
</target>
<target name="runtestEcai" description="Run testEcai">
    <failIfBuildNotFound test.name="testEcai"/>
	<runTestRepeats test.name="testEcai" run.mode="concurrent" run.select="coverage"      run.params="-n 0.1 -i 3000"/>
	<runTestRepeats test.name="testEcai" run.mode="concurrent" run.select="probabilistic" run.params="-n 0.1 -i 3000"/>
	<runTestRepeats test.name="testEcai" run.mode="stable"     run.select="coverage"      run.params="-n 0.1 -i 3000 -k 3 -e 0.3"/>
	<runTestRepeats test.name="testEcai" run.mode="stable"     run.select="probabilistic" run.params="-n 0.1 -i 3000 -k 3 -e 0.3"/>
</target>
<target name="plottestEcai" description="Plot testEcai" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="testEcai"/>
	<plotResult test.name="testEcai" every="300" label="testEcai:n=0.1,k=3,e=0.3:ecai.txt"/>
</target>


<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- testDummyvars ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtestDummyvars" description="Build testDummyvars" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="testDummyvars"/>
	<buildTest test.name="testDummyvars" specs.file="${specs.dir}/testDummyvars/pass-atdepth3-withseq1-invars20of20-withp001.txt"/>
</target>
<target name="graphtestDummyvars" description="Graph testDummyvars" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="testDummyvars"/>
</target>
<target name="runtestDummyvars" description="Run testDummyvars">
    <failIfBuildNotFound test.name="testDummyvars"/>
	<runTestRepeats test.name="testDummyvars" run.mode="concurrent" run.select="coverage"      run.params="-n 0.1 -i 5000"/>
	<runTestRepeats test.name="testDummyvars" run.mode="concurrent" run.select="probabilistic" run.params="-n 0.1 -i 5000"/>
	<runTestRepeats test.name="testDummyvars" run.mode="stable"     run.select="coverage"      run.params="-n 0.1 -i 5000 -k 3 -e 0.3"/>
	<runTestRepeats test.name="testDummyvars" run.mode="stable"     run.select="probabilistic" run.params="-n 0.1 -i 5000 -k 3 -e 0.3"/>
</target>
<target name="plottestDummyvars" description="Plot testDummyvars" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="testDummyvars"/>
	<plotResult test.name="testDummyvars" every="500" key1="center" key2="right" label="testDummyvars:n=0.1,k=3,e=0.3:pass-atdepth3-withseq1-invars20of20-withp001.txt"/>
</target>


<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- testImpactvars ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtestImpactvars" description="Build testImpactvars" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="testImpactvars"/>
	<buildTest test.name="testImpactvars" specs.file="${specs.dir}/testImpactvars/testImpactvars1.txt"/>
</target>
<target name="graphtestImpactvars" description="Graph testImpactvars" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="testImpactvars"/>
</target>
<target name="runtestImpactvars" description="Run testImpactvars">
    <failIfBuildNotFound test.name="testImpactvars"/>
	<runTestRepeats test.name="testImpactvars" run.mode="concurrent" run.select="coverage"      run.params="-n 0.1 -i 4000"/>
	<runTestRepeats test.name="testImpactvars" run.mode="concurrent" run.select="probabilistic" run.params="-n 0.1 -i 4000"/>
	<runTestRepeats test.name="testImpactvars" run.mode="stable"     run.select="coverage"      run.params="-n 0.1 -i 4000 -k 3 -e 0.3"/>
	<runTestRepeats test.name="testImpactvars" run.mode="stable"     run.select="probabilistic" run.params="-n 0.1 -i 4000 -k 3 -e 0.3"/>
</target>
<target name="plottestImpactvars" description="Plot testImpactvars" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="testImpactvars"/>
	<plotResult test.name="testImpactvars" every="400" label="testImpactvars:n=0.1,k=3,e=0.3:testImpactvars1.txt"/>
</target>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- testImpactvars2 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtestImpactvars2" description="Build testImpactvars2" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="testImpactvars2"/>
	<buildTest test.name="testImpactvars2" specs.file="${specs.dir}/testImpactvars/testImpactvars2.txt"/>
</target>
<target name="graphtestImpactvars2" description="Graph testImpactvars2" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="testImpactvars2"/>
</target>
<target name="runtestImpactvars2" description="Run testImpactvars2">
    <failIfBuildNotFound test.name="testImpactvars2"/>
	<runTestRepeats test.name="testImpactvars2" run.mode="concurrent" run.select="coverage"      run.params="-n 0.1 -i 5000"/>
	<runTestRepeats test.name="testImpactvars2" run.mode="concurrent" run.select="probabilistic" run.params="-n 0.1 -i 5000"/>
	<runTestRepeats test.name="testImpactvars2" run.mode="stable"     run.select="coverage"      run.params="-n 0.1 -i 5000 -k 3 -e 0.3"/>
	<runTestRepeats test.name="testImpactvars2" run.mode="stable"     run.select="probabilistic" run.params="-n 0.1 -i 5000 -k 3 -e 0.3"/>
	<runTestRepeats test.name="testImpactvars2" run.mode="concurrent" run.select="confidence"    run.params="-n 0.1 -i 5000 -k 3 -e 0.3 -v 5 -w 5 -a 0.5"/>
</target>
<target name="plottestImpactvars2" description="Plot testImpactvars2" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="testImpactvars2"/>
	<plotResult test.name="testImpactvars2" every="500" label="testImpactvars:n=0.1,k=3,e=0.3:testImpactvars2.txt"/>
</target>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- testImpactvars3 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtestImpactvars3" description="Build testImpactvars3" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="testImpactvars3"/>
	<buildTest test.name="testImpactvars3" specs.file="${specs.dir}/testImpactvars/testImpactvars3.txt"/>
</target>
<target name="graphtestImpactvars3" description="Graph testImpactvars3" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="testImpactvars3"/>
</target>
<target name="runtestImpactvars3" description="Run testImpactvars3">
    <failIfBuildNotFound test.name="testImpactvars3"/>
	<runTestRepeats test.name="testImpactvars3" run.mode="concurrent" run.select="coverage"      run.params="-n 0.1 -i 3000"/>
	<runTestRepeats test.name="testImpactvars3" run.mode="concurrent" run.select="probabilistic" run.params="-n 0.1 -i 3000"/>
	<runTestRepeats test.name="testImpactvars3" run.mode="stable"     run.select="coverage"      run.params="-n 0.1 -i 3000 -k 3 -e 0.3"/>
	<runTestRepeats test.name="testImpactvars3" run.mode="stable"     run.select="probabilistic" run.params="-n 0.1 -i 3000 -k 3 -e 0.3"/>
</target>
<target name="plottestImpactvars3" description="Plot testImpactvars3" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="testImpactvars3"/>
	<plotResult test.name="testImpactvars3" every="300" label="testImpactvars:n=0.1,k=3,e=0.3:testImpactvars3.txt"/>
</target>


<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- testMultiSolutions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtestMultiSolutions" description="Build testMultiSolutions" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="testMultiSolutions"/>
	<buildTest test.name="testMultiSolutions" specs.file="${specs.dir}/testMultiSolutions/testMultiSolutions.txt"/>
</target>
<target name="graphtestMultiSolutions" description="Graph testMultiSolutions" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="testMultiSolutions"/>
</target>
<target name="runtestMultiSolutions" description="Run testMultiSolutions">
    <failIfBuildNotFound test.name="testMultiSolutions"/>
	<runTestRepeats test.name="testMultiSolutions" run.mode="concurrent" run.select="coverage"      run.params="-n 0.1 -i 10000"/>
	<runTestRepeats test.name="testMultiSolutions" run.mode="concurrent" run.select="probabilistic" run.params="-n 0.1 -i 10000"/>
	<runTestRepeats test.name="testMultiSolutions" run.mode="stable"     run.select="coverage"      run.params="-n 0.1 -i 10000 -k 3 -e 0.3"/>
	<runTestRepeats test.name="testMultiSolutions" run.mode="stable"     run.select="probabilistic" run.params="-n 0.1 -i 10000 -k 3 -e 0.3"/>
</target>
<target name="plottestMultiSolutions" description="Plot testMultiSolutions" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="testMultiSolutions"/>
	<plotResult test.name="testMultiSolutions" every="1000" label="testMultiSolutions:n=0.1,k=3,e=0.3:testMultiSolutions.txt"/>
</target>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- testMultiSolutionsR ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtestMultiSolutionsR" description="Build testMultiSolutionsR" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="testMultiSolutionsR"/>
	<buildTest test.name="testMultiSolutionsR" specs.file="${specs.dir}/testMultiSolutions/testMultiSolutionsR.txt"/>
</target>
<target name="graphtestMultiSolutionsR" description="Graph testMultiSolutionsR" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="testMultiSolutionsR"/>
</target>
<target name="runtestMultiSolutionsR" description="Run testMultiSolutionsR">
    <failIfBuildNotFound test.name="testMultiSolutionsR"/>
	<runTestRepeats test.name="testMultiSolutionsR" run.mode="concurrent" run.select="coverage"      run.params="-n 0.1 -i 10000"/>
	<runTestRepeats test.name="testMultiSolutionsR" run.mode="concurrent" run.select="probabilistic" run.params="-n 0.1 -i 10000"/>
	<runTestRepeats test.name="testMultiSolutionsR" run.mode="stable"     run.select="coverage"      run.params="-n 0.1 -i 10000 -k 3 -e 0.3"/>
	<runTestRepeats test.name="testMultiSolutionsR" run.mode="stable"     run.select="probabilistic" run.params="-n 0.1 -i 10000 -k 3 -e 0.3"/>
	<runTestRepeats test.name="testMultiSolutionsR" run.mode="concurrent" run.select="confidence"    run.params="-n 0.1 -i 10000 -k 3 -e 0.3 -v 5 -w 5 -a 0.5"/>
</target>
<target name="plottestMultiSolutionsR" description="Plot testMultiSolutionsR" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="testMultiSolutionsR"/>
	<plotResult test.name="testMultiSolutionsR" every="1000" label="testMultiSolutionsR:n=0.1,k=3,e=0.3:testMultiSolutionsR.txt"/>
</target>


<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- hanoid5s5r8 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildhanoid5s5r8" description="Build hanoid5s5r8" if="available.buildDependencies" depends="buildDependencies">
	<delete dir="${results.dir}/hanoid5s5r8/build"/>
	<mkdir dir="${results.dir}/hanoid5s5r8/build"/>
	<copy file="${hanoi.dir}/src/gui/Towers.java" tofile="${results.dir}/hanoid5s5r8/build/gui/Towers.java"/>
	<compileJACK in.dir="${hanoi.dir}" make.dir="${results.dir}/hanoid5s5r8"/>
	<makeJAR test.name="hanoid5s5r8" make.dir="${results.dir}/hanoid5s5r8"/>
	<jar destfile="${results.dir}/hanoid5s5r8/build/hanoid5s5r8.jar" basedir="${results.dir}/hanoid5s5r8/build" includes="*.class gui/*.class"/>
</target>
<target name="runhanoid5s5r8" description="Run hanoid5s5r8">
    <failIfBuildNotFound test.name="hanoid5s5r8"/>
	<runTest test.name="hanoid5s5r8" run.class="Player" run.mode="init"  run.select="x"                  run.params="   -g 123456 -r 8 -i 5000 -j 5 -z hanoi.init"/>
	<runTestRepeats test.name="hanoid5s5r8" run.class="Player" run.mode="concurrent" run.select="confidence"    run.params="-x -g 123456 -r 8 -i 5000 -j 5 -y ../init-x-1/hanoi.init -p 5 -v 5 -w 5 -a 0.5"/>
	<runTestRepeats test.name="hanoid5s5r8" run.class="Player" run.mode="concurrent" run.select="probabilistic" run.params="-x -g 123456 -r 8 -i 5000 -j 5 -y ../init-x-1/hanoi.init -p 5"/>
</target>
<target name="plothanoid5s5r8" description="Plot hanoid5s5r8" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="hanoid5s5r8"/>
	<plotResult test.name="hanoid5s5r8" every="500" label="hanoi:discs=5:solutions@level=5:goals=5:recursion=8"/>
</target>

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- hanoid5s5r8fr ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildhanoid5s5r8fr" description="Build hanoid5s5r8fr" if="available.buildDependencies" depends="buildDependencies">
	<delete dir="${results.dir}/hanoid5s5r8fr/build"/>
	<mkdir dir="${results.dir}/hanoid5s5r8fr/src"/>
	<copy todir="${results.dir}/hanoid5s5r8fr/src">
		<fileset dir="${hanoi.dir}/src"/>
	</copy>
	<mkdir dir="${results.dir}/hanoid5s5r8fr/build"/>
	<copy file="${hanoi.dir}/src/gui/Towers.java" tofile="${results.dir}/hanoid5s5r8fr/build/gui/Towers.java"/>
	<setFailureRecovery srcfile="${results.dir}/hanoid5s5r8fr/src/SolveDisc.event" value="repost"/>
	<compileJACK in.dir="${results.dir}/hanoid5s5r8fr/src" make.dir="${results.dir}/hanoid5s5r8fr"/>
	<makeJAR test.name="hanoid5s5r8fr" make.dir="${results.dir}/hanoid5s5r8fr"/>
	<jar destfile="${results.dir}/hanoid5s5r8fr/build/hanoid5s5r8fr.jar" basedir="${results.dir}/hanoid5s5r8fr/build" includes="*.class gui/*.class"/>
</target>
<target name="runhanoid5s5r8fr" description="Run hanoid5s5r8fr">
    <failIfBuildNotFound test.name="hanoid5s5r8fr"/>
	<runTest        test.name="hanoid5s5r8fr" run.class="Player" run.mode="init"  run.select="x"                  run.params="   -g 123456 -r 8 -i 5000  -j 5 -z hanoi.init"/>
	<runTestRepeats test.name="hanoid5s5r8fr" run.class="Player" run.mode="concurrent" run.select="confidence"    run.params="-x -g 123456 -r 8 -i 5000 -j 5 -y ../init-x-1/hanoi.init -p 5 -v 5 -w 5 -a 0.5 -f failure_recovery"/>
	<runTestRepeats test.name="hanoid5s5r8fr" run.class="Player" run.mode="concurrent" run.select="probabilistic" run.params="-x -g 123456 -r 8 -i 5000 -j 5 -y ../init-x-1/hanoi.init -p 5 -f failure_recovery"/>
</target>
<target name="plothanoid5s5r8fr" description="Plot hanoid5s5r8fr" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="hanoid5s5r8fr"/>
	<plotResult test.name="hanoid5s5r8fr" every="500" label="hanoi:discs=5:solutions@level=4:goals=6:recursion=8"/>
</target>

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- hanoid5s3r8 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildhanoid5s3r8" description="Build hanoid5s3r8" if="available.buildDependencies" depends="buildDependencies">
	<delete dir="${results.dir}/hanoid5s3r8/build"/>
	<mkdir dir="${results.dir}/hanoid5s3r8/build"/>
	<copy file="${hanoi.dir}/src/gui/Towers.java" tofile="${results.dir}/hanoid5s3r8/build/gui/Towers.java"/>
	<compileJACK in.dir="${hanoi.dir}" make.dir="${results.dir}/hanoid5s3r8"/>
	<makeJAR test.name="hanoid5s3r8" make.dir="${results.dir}/hanoid5s3r8"/>
	<jar destfile="${results.dir}/hanoid5s3r8/build/hanoid5s3r8.jar" basedir="${results.dir}/hanoid5s3r8/build" includes="*.class gui/*.class"/>
</target>
<target name="runhanoid5s3r8" description="Run hanoid5s3r8">
    <failIfBuildNotFound test.name="hanoid5s3r8"/>
	<runTest        test.name="hanoid5s3r8" run.class="Player" run.mode="init" run.select="x"                    run.params="   -g 123456 -r 8 -i 5000  -j 5 -z hanoi.init"/>
	<runTestRepeats test.name="hanoid5s3r8" run.class="Player" run.mode="concurrent" run.select="confidence"    run.params="-x -g 123456 -r 8 -i 5000 -j 5 -y ../init-x-1/hanoi.init -p 3 -v 5 -w 5 -a 0.5"/>
	<runTestRepeats test.name="hanoid5s3r8" run.class="Player" run.mode="concurrent" run.select="probabilistic" run.params="-x -g 123456 -r 8 -i 5000 -j 5 -y ../init-x-1/hanoi.init -p 3"/>
</target>
<target name="plothanoid5s3r8" description="Plot hanoid5s3r8" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="hanoid5s3r8"/>
	<plotResult test.name="hanoid5s3r8" every="500" label="hanoi:discs=5:solutions@level=3:goals=7:recursion=8"/>
</target>

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- hanoid5s3r8fr ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildhanoid5s3r8fr" description="Build hanoid5s3r8fr" if="available.buildDependencies" depends="buildDependencies">
	<delete dir="${results.dir}/hanoid5s3r8fr/build"/>
	<mkdir dir="${results.dir}/hanoid5s3r8fr/src"/>
	<copy todir="${results.dir}/hanoid5s3r8fr/src">
		<fileset dir="${hanoi.dir}/src"/>
	</copy>
	<mkdir dir="${results.dir}/hanoid5s3r8fr/build"/>
	<copy file="${hanoi.dir}/src/gui/Towers.java" tofile="${results.dir}/hanoid5s3r8fr/build/gui/Towers.java"/>
	<setFailureRecovery srcfile="${results.dir}/hanoid5s3r8fr/src/SolveDisc.event" value="repost"/>
	<compileJACK in.dir="${results.dir}/hanoid5s3r8fr/src" make.dir="${results.dir}/hanoid5s3r8fr"/>
	<makeJAR test.name="hanoid5s3r8fr" make.dir="${results.dir}/hanoid5s3r8fr"/>
	<jar destfile="${results.dir}/hanoid5s3r8fr/build/hanoid5s3r8fr.jar" basedir="${results.dir}/hanoid5s3r8fr/build" includes="*.class gui/*.class"/>
</target>
<target name="runhanoid5s3r8fr" description="Run hanoid5s3r8fr">
    <failIfBuildNotFound test.name="hanoid5s3r8fr"/>
	<runTest        test.name="hanoid5s3r8fr" run.class="Player" run.mode="init"  run.select="x"                  run.params="   -g 123456 -r 8 -i 5000  -j 5 -z hanoi.init"/>
	<runTestRepeats test.name="hanoid5s3r8fr" run.class="Player" run.mode="concurrent" run.select="confidence"    run.params="-x -g 123456 -r 8 -i 5000 -j 5 -y ../init-x-1/hanoi.init -p 3 -v 5 -w 5 -a 0.5 -f failure_recovery"/>
	<runTestRepeats test.name="hanoid5s3r8fr" run.class="Player" run.mode="concurrent" run.select="probabilistic" run.params="-x -g 123456 -r 8 -i 5000 -j 5 -y ../init-x-1/hanoi.init -p 3 -f failure_recovery"/>
</target>
<target name="plothanoid5s3r8fr" description="Plot hanoid5s3r8fr" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="hanoid5s3r8fr"/>
	<plotResult test.name="hanoid5s3r8fr" every="500" label="hanoi:discs=5:solutions@level=2:goals=8:recursion=8"/>
</target>

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- hanoid5s1r8 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildhanoid5s1r8" description="Build hanoid5s1r8" if="available.buildDependencies" depends="buildDependencies">
	<delete dir="${results.dir}/hanoid5s1r8/build"/>
	<mkdir dir="${results.dir}/hanoid5s1r8/build"/>
	<copy file="${hanoi.dir}/src/gui/Towers.java" tofile="${results.dir}/hanoid5s1r8/build/gui/Towers.java"/>
	<compileJACK in.dir="${hanoi.dir}" make.dir="${results.dir}/hanoid5s1r8"/>
	<makeJAR test.name="hanoid5s1r8" make.dir="${results.dir}/hanoid5s1r8"/>
	<jar destfile="${results.dir}/hanoid5s1r8/build/hanoid5s1r8.jar" basedir="${results.dir}/hanoid5s1r8/build" includes="*.class gui/*.class"/>
</target>
<target name="runhanoid5s1r8" description="Run hanoid5s1r8">
    <failIfBuildNotFound test.name="hanoid5s1r8"/>
	<runTest        test.name="hanoid5s1r8" run.class="Player" run.mode="init"  run.select="x"                  run.params="   -g 123456 -r 8 -i 5000  -j 5 -z hanoi.init"/>
	<runTestRepeats test.name="hanoid5s1r8" run.class="Player" run.mode="concurrent" run.select="confidence"    run.params="-x -g 123456 -r 8 -i 5000 -j 5 -y ../init-x-1/hanoi.init -p 1 -v 5 -w 5 -a 0.5"/>
	<runTestRepeats test.name="hanoid5s1r8" run.class="Player" run.mode="concurrent" run.select="probabilistic" run.params="-x -g 123456 -r 8 -i 5000 -j 5 -y ../init-x-1/hanoi.init -p 1"/>
</target>
<target name="plothanoid5s1r8" description="Plot hanoid5s1r8" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="hanoid5s1r8"/>
	<plotResult test.name="hanoid5s1r8" every="500" label="hanoi:discs=5:solutions@level=1:goals=8:recursion=8"/>
</target>

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- hanoid5s1r8fr ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildhanoid5s1r8fr" description="Build hanoid5s1r8fr" if="available.buildDependencies" depends="buildDependencies">
	<delete dir="${results.dir}/hanoid5s1r8fr/build"/>
	<mkdir dir="${results.dir}/hanoid5s1r8fr/src"/>
	<copy todir="${results.dir}/hanoid5s1r8fr/src">
		<fileset dir="${hanoi.dir}/src"/>
	</copy>
	<mkdir dir="${results.dir}/hanoid5s1r8fr/build"/>
	<copy file="${hanoi.dir}/src/gui/Towers.java" tofile="${results.dir}/hanoid5s1r8fr/build/gui/Towers.java"/>
	<setFailureRecovery srcfile="${results.dir}/hanoid5s1r8fr/src/SolveDisc.event" value="repost"/>
	<compileJACK in.dir="${results.dir}/hanoid5s1r8fr/src" make.dir="${results.dir}/hanoid5s1r8fr"/>
	<makeJAR test.name="hanoid5s1r8fr" make.dir="${results.dir}/hanoid5s1r8fr"/>
	<jar destfile="${results.dir}/hanoid5s1r8fr/build/hanoid5s1r8fr.jar" basedir="${results.dir}/hanoid5s1r8fr/build" includes="*.class gui/*.class"/>
</target>
<target name="runhanoid5s1r8fr" description="Run hanoid5s1r8fr">
    <failIfBuildNotFound test.name="hanoid5s1r8fr"/>
	<runTest        test.name="hanoid5s1r8fr" run.class="Player" run.mode="init"  run.select="x"                  run.params="   -g 123456 -r 8 -i 5000  -j 5 -z hanoi.init"/>
	<runTestRepeats test.name="hanoid5s1r8fr" run.class="Player" run.mode="concurrent" run.select="confidence"    run.params="-x -g 123456 -r 8 -i 5000 -j 5 -y ../init-x-1/hanoi.init -p 1 -v 5 -w 5 -a 0.5 -f failure_recovery"/>
	<runTestRepeats test.name="hanoid5s1r8fr" run.class="Player" run.mode="concurrent" run.select="probabilistic" run.params="-x -g 123456 -r 8 -i 5000 -j 5 -y ../init-x-1/hanoi.init -p 1 -f failure_recovery"/>
</target>
<target name="plothanoid5s1r8fr" description="Plot hanoid5s1r8fr" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="hanoid5s1r8fr"/>
	<plotResult test.name="hanoid5s1r8fr" every="500" label="hanoi:discs=5:solutions@level=1:goals=8:recursion=8"/>
</target>

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- hanoi5 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildhanoi5" description="Build hanoi5" if="available.buildDependencies" depends="buildDependencies">
	<delete dir="${results.dir}/hanoi5/build"/>
	<mkdir dir="${results.dir}/hanoi5/build"/>
	<copy file="${hanoi.dir}/src/gui/Towers.java" tofile="${results.dir}/hanoi5/build/gui/Towers.java"/>
	<compileJACK in.dir="${hanoi.dir}" make.dir="${results.dir}/hanoi5"/>
	<makeJAR test.name="hanoi5" make.dir="${results.dir}/hanoi5"/>
	<jar destfile="${results.dir}/hanoi5/build/hanoi5.jar" basedir="${results.dir}/hanoi5/build" includes="*.class gui/*.class"/>
</target>
<target name="runhanoi5" description="Run hanoi5">
    <failIfBuildNotFound test.name="hanoi5"/>
	<runTest        test.name="hanoi5" run.class="Player" run.mode="init"  run.select="x"                  run.params="   -g 123456 -r 8 -i 5000  -j 5 -z hanoi.init"/>
	<runTestRepeats test.name="hanoi5" run.class="Player" run.mode="concurrent" run.select="confidence"    run.params="-x -g 123456 -r 8 -i 25000 -j 5 -y ../init-x-1/hanoi.init -p -1 -v 5 -w 5 -a 0.5"/>
	<runTestRepeats test.name="hanoi5" run.class="Player" run.mode="concurrent" run.select="probabilistic" run.params="-x -g 123456 -r 8 -i 25000 -j 5 -y ../init-x-1/hanoi.init -p -1"/>
</target>
<target name="plothanoi5" description="Plot hanoi5" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="hanoi5"/>
	<plotResult test.name="hanoi5" every="2000" window="200" label="hanoi:discs=5:solutions@level=all:goals=10+8+8+7+6+6+3+3=51:recursion=8"/>
</target>

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- hanoi5fr ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildhanoi5fr" description="Build hanoi5fr" if="available.buildDependencies" depends="buildDependencies">
	<delete dir="${results.dir}/hanoi5fr/build"/>
	<mkdir dir="${results.dir}/hanoi5fr/src"/>
	<copy todir="${results.dir}/hanoi5fr/src">
		<fileset dir="${hanoi.dir}/src"/>
	</copy>
	<mkdir dir="${results.dir}/hanoi5fr/build"/>
	<copy file="${hanoi.dir}/src/gui/Towers.java" tofile="${results.dir}/hanoi5fr/build/gui/Towers.java"/>
	<setFailureRecovery srcfile="${results.dir}/hanoi5fr/src/SolveDisc.event" value="repost"/>
	<compileJACK in.dir="${results.dir}/hanoi5fr/src" make.dir="${results.dir}/hanoi5fr"/>
	<makeJAR test.name="hanoi5fr" make.dir="${results.dir}/hanoi5fr"/>
	<jar destfile="${results.dir}/hanoi5fr/build/hanoi5fr.jar" basedir="${results.dir}/hanoi5fr/build" includes="*.class gui/*.class"/>
</target>
<target name="runhanoi5fr" description="Run hanoi5fr">
    <failIfBuildNotFound test.name="hanoi5fr"/>
	<runTest        test.name="hanoi5fr" run.class="Player" run.mode="init"  run.select="x"                  run.params="   -g 123456 -r 8 -i 5000  -j 5 -z hanoi.init"/>
	<runTestRepeats test.name="hanoi5fr" run.class="Player" run.mode="concurrent" run.select="confidence"    run.params="-x -g 123456 -r 8 -i 5000 -j 5 -y ../init-x-1/hanoi.init -p -1 -v 5 -w 5 -a 0.5 -f failure_recovery"/>
	<runTestRepeats test.name="hanoi5fr" run.class="Player" run.mode="concurrent" run.select="probabilistic" run.params="-x -g 123456 -r 8 -i 5000 -j 5 -y ../init-x-1/hanoi.init -p -1 -f failure_recovery"/>
</target>
<target name="plothanoi5fr" description="Plot hanoi5fr" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="hanoi5fr"/>
	<plotResult test.name="hanoi5fr" every="250" window="200" label="hanoi:discs=5:solutions@level=all:goals=10+8+8+7+6+6+3+3=51:recursion=8"/>
</target>

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- hanoi5t ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildhanoi5t" description="Build hanoi5t" if="available.buildDependencies" depends="buildDependencies">
	<delete dir="${results.dir}/hanoi5t/build"/>
	<mkdir dir="${results.dir}/hanoi5t/build"/>
	<copy file="${hanoi.dir}/src/gui/Towers.java" tofile="${results.dir}/hanoi5t/build/gui/Towers.java"/>
	<compileJACK in.dir="${hanoi.dir}" make.dir="${results.dir}/hanoi5t"/>
	<makeJAR test.name="hanoi5t" make.dir="${results.dir}/hanoi5t"/>
	<jar destfile="${results.dir}/hanoi5t/build/hanoi5t.jar" basedir="${results.dir}/hanoi5t/build" includes="*.class gui/*.class"/>
</target>
<target name="runhanoi5t" description="Run hanoi5t">
    <failIfBuildNotFound test.name="hanoi5t"/>
	<runTest        test.name="hanoi5t" run.class="Player" run.mode="init"  run.select="x"                  run.params="   -g 123456 -r 8 -i 5000  -j 5 -z hanoi.init"/>
	<runTestRepeats test.name="hanoi5t" run.class="Player" run.mode="concurrent" run.select="confidence"    run.params="-x -g 123456 -r 8 -i 25000 -j 5 -y ../init-x-1/hanoi.init -p -1 -t 0.2 -v 5 -w 5 -a 0.5"/>
	<runTestRepeats test.name="hanoi5t" run.class="Player" run.mode="concurrent" run.select="probabilistic" run.params="-x -g 123456 -r 8 -i 25000 -j 5 -y ../init-x-1/hanoi.init -p -1 -t 0.2"/>
</target>
<target name="plothanoi5t" description="Plot hanoi5t" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="hanoi5t"/>
	<plotResult test.name="hanoi5t" every="2000" window="200" label="hanoi:discs=5:solutions@level=all:goals=10+8+8+7+6+6+3+3=51:recursion=8"/>
</target>


<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- testfr01a ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtestfr01a" description="Build testfr01a" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="testfr01a"/>
	<buildTest test.name="testfr01a" specs.file="${specs.dir}/testFailureRecovery/testfr01a.txt"/>
</target>
<target name="graphtestfr01a" description="Graph testfr01a" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="testfr01a"/>
</target>
<target name="runtestfr01a" description="Run testfr01a">
    <failIfBuildNotFound test.name="testfr01a"/>
	<runTestRepeats test.name="testfr01a" run.mode="concurrent" run.select="probabilistic"      run.params="-n 0.0 -i 2000 -p failure_recovery"/>
	<runTestRepeats test.name="testfr01a" run.mode="stable"     run.select="probabilistic"      run.params="-n 0.0 -i 2000 -p failure_recovery -k 3 -e 0.3"/>
</target>
<target name="plottestfr01a" description="Plot testfr01a" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="testfr01a"/>
	<plotResult test.name="testfr01a" every="200" key1="center" key2="right" label="testfr01a:n=0.0,failure_recovery:testfr01a.txt"/>
</target>

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- testfr01b ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtestfr01b" description="Build testfr01b" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="testfr01b"/>
	<buildTest test.name="testfr01b" specs.file="${specs.dir}/testFailureRecovery/testfr01b.txt"/>
</target>
<target name="graphtestfr01b" description="Graph testfr01b" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="testfr01b"/>
</target>
<target name="runtestfr01b" description="Run testfr01b">
    <failIfBuildNotFound test.name="testfr01b"/>
	<runTestRepeats test.name="testfr01b" run.mode="concurrent" run.select="probabilistic"      run.params="-n 0.0 -i 2000"/>
	<runTestRepeats test.name="testfr01b" run.mode="stable"     run.select="probabilistic"      run.params="-n 0.0 -i 2000"/>
</target>
<target name="plottestfr01b" description="Plot testfr01b" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="testfr01b"/>
	<plotResult test.name="testfr01b" every="200" key1="center" key2="right" label="testfr01b:n=0.0,m=1:testfr01b.txt"/>
</target>


<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- testfr02a ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtestfr02a" description="Build testfr02a" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="testfr02a"/>
	<buildTest test.name="testfr02a" specs.file="${specs.dir}/testFailureRecovery/testfr02a.txt"/>
</target>
<target name="graphtestfr02a" description="Graph testfr02a" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="testfr02a"/>
</target>
<target name="runtestfr02a" description="Run testfr02a">
    <failIfBuildNotFound test.name="testfr02a"/>
	<runTestRepeats test.name="testfr02a" run.mode="concurrent" run.select="probabilistic"      run.params="-n 0.0 -i 5000 -p failure_recovery"/>
	<runTestRepeats test.name="testfr02a" run.mode="stable"     run.select="probabilistic"      run.params="-n 0.0 -i 5000 -p failure_recovery -k 3 -e 0.3"/>
</target>
<target name="plottestfr02a" description="Plot testfr02a" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="testfr02a"/>
	<plotResult test.name="testfr02a" every="500" key1="center" key2="right" label="testfr02a:n=0.0,failure_recovery:testfr02a.txt"/>
</target>


<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- testfr02b ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildtestfr02b" description="Build testfr02b" if="available.buildDependencies" depends="buildDependencies">
	<cleanTest test.name="testfr02b"/>
	<buildTest test.name="testfr02b" specs.file="${specs.dir}/testFailureRecovery/testfr02b.txt"/>
</target>
<target name="graphtestfr02b" description="Graph testfr02b" if="available.graphDependencies" depends="graphDependencies">
	<graphInput test.name="testfr02b"/>
</target>
<target name="runtestfr02b" description="Run testfr02b">
    <failIfBuildNotFound test.name="testfr02b"/>
	<runTestRepeats test.name="testfr02b" run.mode="concurrent" run.select="probabilistic"      run.params="-n 0.0 -i 5000"/>
	<runTestRepeats test.name="testfr02b" run.mode="stable"     run.select="probabilistic"      run.params="-n 0.0 -i 5000 -k 3 -e 0.3"/>
</target>
<target name="plottestfr02b" description="Plot testfr02b" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="testfr02b"/>
	<plotResult test.name="testfr02b" every="500" key1="center" key2="right" label="testfr02b:n=0.0,failure_recovery:testfr02b.txt"/>
</target>


<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- storage ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildstorage1" description="Build storage1" if="available.buildDependencies" depends="buildDependencies">
	<delete dir="${results.dir}/storage1/build"/>
	<mkdir dir="${results.dir}/storage1/build"/>
	<compileJACK in.dir="${storage.dir}" make.dir="${results.dir}/storage1"/>
	<makeJAR test.name="storage1" make.dir="${results.dir}/storage1"/>
	<jar destfile="${results.dir}/storage1/build/storage1.jar" basedir="${results.dir}/storage1/build" includes="*.class gui/*.class"/>
</target>
<target name="runstorage1" description="Run storage1">
    <failIfBuildNotFound test.name="storage1"/>
	<runTest test.name="storage1" run.class="BatteryManager" run.mode="concurrent" run.select="probabilistic" run.params="-g 123456 -n 5 -t 0 -a 0.5 -v 5 -w 5 -i 10000 -k 1 -e 0.5"/>
	<runTest test.name="storage1" run.class="BatteryManager" run.mode="concurrent" run.select="confidence"    run.params="-g 123456 -n 5 -t 0 -a 0.5 -v 5 -w 5 -i 10000 -k 1 -e 0.5"/>
</target>
<target name="plotstorage1" description="Plot storage1" if="available.plotDependencies" depends="plotDependencies">
    <failIfResultsNotFound test.name="storage1"/>
	<plotResult test.name="storage1" every="500" window="200" label="storage:modules=5"/>
</target>


<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- END TESTS TARGETS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

</project>
