<?xml version="1.0" encoding="ISO-8859-1"?>

<!-- BLAK: BDI Learning Agent Kit -->
<project name="BLAK" basedir="." default="buildAll">

<!-- USER CONFIG -->
<!-- Single option to control the iterations parameter for all tests -->
<property name="config.iterations" value="15000"/>
<property name="gnuplot.dep" value="${basedir}/scripts/gnuplot"/>
<!-- END USER CONFIG -->


<!-- Root directory that contains the BLAK distribution -->
<property name="root.dir" value="${basedir}"/>
<property name="scripts.dir" value="${root.dir}/scripts"/>
<property name="plot.sh" value="${scripts.dir}/plot.sh"/>

<property name="blak.dep" value="${root.dir}/lib/blak.jar"/>
<property name="specs.dir" value="${root.dir}/specs"/>
<property name="results.dir" value="${root.dir}/results"/>
<property name="results.all.dir" value="${results.dir}/all"/>

<!-- External dependencies. See README for installation instructions for JACK and WEKA -->
<property name="jack.dep" value="${root.dir}/lib/jack.jar"/>
<property name="weka.dep" value="${root.dir}/lib/weka.jar"/>

<!-- Check for external dependencies -->
<target name="dependencies" description="Check for external dependencies">
	<available file="${jack.dep}" property="jack.available"/>
	<fail message="JACK installation not found at ${jack.dep}. See README for installation instructions." unless="jack.available"/>
	<available file="${weka.dep}" property="weka.available"/>
	<fail message="WEKA installation not found at ${weka.dep}. See README for installation instructions." unless="weka.available"/>
</target>

<!-- Standard sub-tree structure for indvidual tests -->
<property name="build.dir" value="build"/>
<property name="build.classes.dir" value="${build.dir}"/>
<property name="build.classes.plans.dir" value="${build.classes.dir}/plans"/>
<property name="build.classes.events.dir" value="${build.classes.dir}/events"/>
<property name="build.classes.agents.dir" value="${build.classes.dir}/agents"/>
<property name="build.sources.dir" value="${build.dir}"/>
<property name="build.sources.plans.dir" value="${build.sources.dir}/plans"/>
<property name="build.sources.events.dir" value="${build.sources.dir}/events"/>
<property name="build.sources.agents.dir" value="${build.sources.dir}/agents"/>

<!-- Generic target to build a test sub-tree structure -->
<target name="makeTestTree" description="Generic target: generate build sub-tree structure for a specified experiment">
	<mkdir dir="${make.dir}/${build.classes.agents.dir}"/>
	<mkdir dir="${make.dir}/${build.classes.events.dir}"/>
	<mkdir dir="${make.dir}/${build.classes.plans.dir}"/>
	<mkdir dir="${make.dir}/${build.sources.agents.dir}"/>
	<mkdir dir="${make.dir}/${build.sources.events.dir}"/>
	<mkdir dir="${make.dir}/${build.sources.plans.dir}"/>
</target>

<!-- Generic target to generate JACK sources -->
<target name="generateJACK" description="Generic target: generate JACK sources for a specified experiment">
	<java fork="yes" classname="expGenerator.ExpGenerator" failonerror="true">
		<classpath>
			<pathelement location="${blak.dep}"/>
			<pathelement location="${jack.dep}"/>
			<pathelement location="${weka.dep}"/>
		</classpath>
		<arg line="-i ${specs.file}  -o ${make.dir}/${build.sources.dir}"/>
	</java>
</target>

<!-- Generic target to compile JACK sources -->
<target name="compileJACK" description="Generic target: compile JACK sources for a specified experiment">
	<java fork="yes" maxmemory="1g" classname="aos.main.JackBuild" failonerror="true">
		<arg line="-cp ${jack.dep}:${weka.dep}:${blak.dep} -wd ${make.dir}/${build.sources.dir} -r"/>
		<classpath>
			<pathelement location="${blak.dep}"/>
			<pathelement location="${jack.dep}"/>
			<pathelement location="${weka.dep}"/>
		</classpath>
	</java>
</target>

<!-- Generic target to build test JAR -->
<target name="makeJAR" description="Generic target: build a JAR archive for the experiment">
	<jar destfile="${make.dir}/${build.dir}/${test.name}.jar" basedir="${make.dir}/${build.dir}" includes="agents/*.class trees/*.class events/*.class plans/*.class"/>
</target>

<!-- Generic target to build the entire test -->
<target name="buildTest" description="Generic target: build a specified experiment">
	<!-- Build the sub-tree hierarchy -->	
	<antcall target="makeTestTree">
		<param name="make.dir" value="${results.dir}/${test.name}"/>
	</antcall>
	<!-- Generate the JACK source files for the experiment -->	
	<antcall target="generateJACK">
		<param name="make.dir" value="${results.dir}/${test.name}"/>
		<param name="specs.file" value="${specs.file}"/>
	</antcall>
	<!-- Compile the JACK source files -->	
	<antcall target="compileJACK">
		<param name="make.dir" value="${results.dir}/${test.name}"/>
	</antcall>
	<!-- Build the test JAR -->
	<antcall target="makeJAR">
		<param name="test.name" value="${test.name}"/>
		<param name="make.dir" value="${results.dir}/${test.name}"/>
	</antcall>
</target>

<!-- Generic target to run a test within an experiment -->
<target name="runTest" description="Generic target: run an individual test within an experiment">
	<mkdir dir="${results.dir}/${test.name}/${run.type}${run.id}"/>
	<tstamp prefix="start"/>
	<echo level="info" message="${start.DSTAMP}.${start.TSTAMP}: Started ${test.name}/${run.type}${run.id}"/>
	<java fork="yes"  maxmemory="1g" classname="agents.Environment" failonerror="true" output="${results.dir}/${test.name}/${run.type}${run.id}/stdout.log">
		<arg line="-d ${results.dir}/${test.name}/${run.type}${run.id} -o ${test.name}-${run.type}-${run.id}.csv -u ${run.type} ${run.params}"/>
		<classpath>
			<pathelement location="${jack.dep}"/>
			<pathelement location="${weka.dep}"/>
			<pathelement location="${blak.dep}"/>
			<pathelement location="${results.dir}/${test.name}/${build.dir}/${test.name}.jar"/>
		</classpath>
	</java>
	<copy file="${results.dir}/${test.name}/${run.type}${run.id}/${test.name}-${run.type}-${run.id}.csv" todir="${results.all.dir}" flatten="true"/>
</target>

<!-- Generic target to run a test within an experiment -->
<target name="runTestRepeats" description="Generic target: repeat an individual test (N times) within an experiment">
	<antcall target="runTest">
		<param name="test.name"		value="${test.name}"/>
		<param name="run.type"		value="${run.type}"/>
		<param name="run.id"		value="1"/>
		<param name="run.params"	value="${run.params}"/>
	</antcall>
	<antcall target="runTest">
		<param name="test.name"		value="${test.name}"/>
		<param name="run.type"		value="${run.type}"/>
		<param name="run.id"		value="2"/>
		<param name="run.params"	value="${run.params}"/>
	</antcall>
	<antcall target="runTest">
		<param name="test.name"		value="${test.name}"/>
		<param name="run.type"		value="${run.type}"/>
		<param name="run.id"		value="3"/>
		<param name="run.params"	value="${run.params}"/>
	</antcall>
	<antcall target="runTest">
		<param name="test.name"		value="${test.name}"/>
		<param name="run.type"		value="${run.type}"/>
		<param name="run.id"		value="4"/>
		<param name="run.params"	value="${run.params}"/>
	</antcall>
	<antcall target="runTest">
		<param name="test.name"		value="${test.name}"/>
		<param name="run.type"		value="${run.type}"/>
		<param name="run.id"		value="5"/>
		<param name="run.params"	value="${run.params}"/>
	</antcall>
</target>

<!-- Generic target to plot results of an experiment -->
<target name="plotResult" description="Generic target: plot experiment results">
	<exec executable="${plot.sh}">
		<arg value="-t"/>
		<arg value="${test.name}"/>
		<arg value="-d"/>
		<arg value="${results.all.dir}"/>
		<arg value="-o"/>
		<arg value="${results.all.dir}/${test.name}.pdf"/>
		<arg value="-g"/>
		<arg value="${gnuplot.dep}"/>
		<arg value="-r"/>
		<arg value="${range}"/>
		<arg value="-l"/>
		<arg value="${label}"/>
	</exec>
</target>


<!-- Run config -->
<target name="configRun" description="Configure run directories">
	<mkdir dir="${results.all.dir}"/>
</target>

<!-- Run dependencies -->
<target name="plotDependencies" description="Check for external dependencies">
	<available file="${gnuplot.dep}" property="gnuplot.available"/>
	<fail message="Gnuplot binary not found at ${gnuplot.dep}. Exiting." unless="gnuplot.available"/>
</target>

<!-- Clean test -->
<target name="cleanTest" description="Delete all build files for a specified experiment">
	<delete dir="${results.dir}/${test.name}/${build.dir}"/>
</target>

<!-- Clean -->
<target name="clean" description="Delete all build files">
	<delete includeemptydirs="true">
		<fileset dir="${results.dir}" includes="**/build/**"/>
	</delete>
</target>

<!-- Clean -->
<target name="cleanAll" description="Delete all generated files including results">
	<delete dir="${results.dir}"/>
</target>

<!-- Default targets -->
<target name="buildAll" description="Build all tests" depends="dependencies,buildTest01,buildTest02,buildTest03,buildTest04,buildTest05"/>
<target name="runAll" description="Run all tests" depends="configRun,runTest01,runTest02,runTest03,runTest04,runTest05"/>



<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- BEGIN TESTS (Add new tests targets here) ~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->


<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- TEST 01 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildTest01" description="Build Test 01">
	<antcall target="cleanTest">
		<param name="test.name" value="test01"/>
	</antcall>
	<antcall target="buildTest">
		<param name="test.name" value="test01"/>
		<param name="specs.file" value="${specs.dir}/concurrentFail.txt"/>
	</antcall>
</target>
<target name="runTest01" description="Run Test 01">
	<antcall target="runTestRepeats">
		<param name="test.name"		value="test01"/>
		<param name="run.type"		value="stable"/>
		<param name="run.params"	value="-i ${config.iterations} -s probabilistic -m 1 -e 0.3"/>
	</antcall>
	<antcall target="runTestRepeats">
		<param name="test.name"		value="test01"/>
		<param name="run.type"		value="concurrent"/>
		<param name="run.params"	value="-i ${config.iterations} -s probabilistic -m 1"/>
	</antcall>
</target>
<target name="plotTest01" description="Plot Test 01" depends="plotDependencies">
	<antcall target="plotResult">
		<param name="test.name"		value="test01"/>
		<param name="range"			value="[:2000]"/>
		<param name="label"			value="Test01:concurrentFail.txt"/>
	</antcall>
</target>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- TEST 02 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildTest02" description="Build Test 02">
	<antcall target="cleanTest">
		<param name="test.name" value="test02"/>
	</antcall>
	<antcall target="buildTest">
		<param name="test.name" value="test02"/>
		<param name="specs.file" value="${specs.dir}/concurrentFailDepth3Easier.txt"/>
	</antcall>
</target>
<target name="runTest02" description="Run Test 02">
	<antcall target="runTestRepeats">
		<param name="test.name"		value="test02"/>
		<param name="run.type"		value="stable"/>
		<param name="run.params"	value="-i ${config.iterations} -s probabilistic -m 1 -e 0.3"/>
	</antcall>
	<antcall target="runTestRepeats">
		<param name="test.name"		value="test02"/>
		<param name="run.type"		value="concurrent"/>
		<param name="run.params"	value="-i ${config.iterations} -s probabilistic -m 1"/>
	</antcall>
</target>
<target name="plotTest02" description="Plot Test 02" depends="plotDependencies">
	<antcall target="plotResult">
		<param name="test.name"		value="test02"/>
		<param name="range"			value="[:8000]"/>
		<param name="label"			value="Test02:concurrentFailDepth3Easier.txt"/>
	</antcall>
</target>

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- TEST 03 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildTest03" description="Build Test 03">
	<antcall target="cleanTest">
		<param name="test.name" value="test03"/>
	</antcall>
	<antcall target="buildTest">
		<param name="test.name" value="test03"/>
		<param name="specs.file" value="${specs.dir}/concurrentFailDepth3Easier-balanced17.txt"/>
	</antcall>
</target>
<target name="runTest03" description="Run Test 03">
	<antcall target="runTestRepeats">
		<param name="test.name"		value="test03"/>
		<param name="run.type"		value="stable"/>
		<param name="run.params"	value="-i ${config.iterations} -s probabilistic -m 1 -e 0.3"/>
	</antcall>
	<antcall target="runTestRepeats">
		<param name="test.name"		value="test03"/>
		<param name="run.type"		value="concurrent"/>
		<param name="run.params"	value="-i ${config.iterations} -s probabilistic -m 1"/>
	</antcall>
</target>
<target name="plotTest03" description="Plot Test 03" depends="plotDependencies">
	<antcall target="plotResult">
		<param name="test.name"		value="test03"/>
		<param name="range"			value="[:2500]"/>
		<param name="label"			value="Test03:concurrentFailDepth3Easier-balanced17.txt"/>
	</antcall>
</target>

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- TEST 04 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildTest04" description="Build Test 04">
	<antcall target="cleanTest">
		<param name="test.name" value="test04"/>
	</antcall>
	<antcall target="buildTest">
		<param name="test.name" value="test04"/>
		<param name="specs.file" value="${specs.dir}/concurrentFailDepth3Easier-balanced20.txt"/>
	</antcall>
</target>
<target name="runTest04" description="Run Test 04">
	<antcall target="runTestRepeats">
		<param name="test.name"		value="test04"/>
		<param name="run.type"		value="stable"/>
		<param name="run.params"	value="-i ${config.iterations} -s probabilistic -m 1 -e 0.3"/>
	</antcall>
	<antcall target="runTestRepeats">
		<param name="test.name"		value="test04"/>
		<param name="run.type"		value="concurrent"/>
		<param name="run.params"	value="-i ${config.iterations} -s probabilistic -m 1"/>
	</antcall>
</target>
<target name="plotTest04" description="Plot Test 04" depends="plotDependencies">
	<antcall target="plotResult">
		<param name="test.name"		value="test04"/>
		<param name="range"			value="[:2500]"/>
		<param name="label"			value="Test04:concurrentFailDepth3Easier-balanced20.txt"/>
	</antcall>
</target>

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- TEST 05 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildTest05" description="Build Test 05">
	<antcall target="cleanTest">
		<param name="test.name" value="test05"/>
	</antcall>
	<antcall target="buildTest">
		<param name="test.name" value="test05"/>
		<param name="specs.file" value="${specs.dir}/concurrentFailDepth4-t15.txt"/>
	</antcall>
</target>
<target name="runTest05" description="Run Test 05">
	<antcall target="runTestRepeats">
		<param name="test.name"		value="test05"/>
		<param name="run.type"		value="stable"/>
		<param name="run.params"	value="-i ${config.iterations} -s probabilistic -m 1 -e 0.3"/>
	</antcall>
	<antcall target="runTestRepeats">
		<param name="test.name"		value="test05"/>
		<param name="run.type"		value="concurrent"/>
		<param name="run.params"	value="-i ${config.iterations} -s probabilistic -m 1"/>
	</antcall>
</target>
<target name="plotTest05" description="Plot Test 05" depends="plotDependencies">
	<antcall target="plotResult">
		<param name="test.name"		value="test05"/>
		<param name="range"			value="[:10000]"/>
		<param name="label"			value="Test05:concurrentFailDepth4-t15.txt"/>
	</antcall>
</target>

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- TEST ecai ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<target name="buildTestEcai" description="Build Test Ecai">
	<antcall target="cleanTest">
		<param name="test.name" value="testEcai"/>
	</antcall>
	<antcall target="buildTest">
		<param name="test.name" value="testEcai"/>
		<param name="specs.file" value="${specs.dir}/ecai.txt"/>
	</antcall>
</target>
<target name="runTestEcai" description="Run Test Ecai">
	<antcall target="runTestRepeats">
		<param name="test.name"		value="testEcai"/>
		<param name="run.type"		value="stable"/>
		<param name="run.params"	value="-i ${config.iterations} -s probabilistic -m 1 -e 0.3"/>
	</antcall>
	<antcall target="runTestRepeats">
		<param name="test.name"		value="testEcai"/>
		<param name="run.type"		value="concurrent"/>
		<param name="run.params"	value="-i ${config.iterations} -s probabilistic -m 1"/>
	</antcall>
</target>
<target name="plotTestEcai" description="Plot Test Ecai" depends="plotDependencies">
	<antcall target="plotResult">
		<param name="test.name"		value="testEcai"/>
		<param name="range"			value="[:2500]"/>
		<param name="label"			value="TestEcai:ecai.txt"/>
	</antcall>
</target>

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- END TESTS TARGETS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

</project>
