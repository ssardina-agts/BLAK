package treeGenerator;
import java.util.Vector;

/**
 * Data Structure for Plans generated by the tree.
 * @author root
 *
 */

public class Plan implements TreeGenElement{
	
	private String IDNumber;
	private int depth;
	private String handleGoal;
	private boolean preState;
	private boolean initPreState;
	private Vector<TreeGenElement> bodySpace;

	public Plan()
	{
		this.setDepth(0);
		bodySpace = new Vector<TreeGenElement>();
		this.setInitPreState(true);
		this.setPreState(true);
	}
	
	public Plan(String number)
	{
		this.setIDNumber(number);
		this.setDepth(0);
		bodySpace = new Vector<TreeGenElement>();
		this.setInitPreState(true);
		this.setPreState(true);
	}
	
	public Plan(int number)
	{
		this.setIDNumber(""+number);
		this.setDepth(0);
		bodySpace = new Vector<TreeGenElement>();
		this.setInitPreState(true);
		this.setPreState(true);
	}
	
	public void setIDNumber(String iDNumber) {
		IDNumber = iDNumber;
	}

	public String getIDNumber() {
		return IDNumber;
	}

	public void setDepth(int depth) {
		this.depth = depth;
	}

	public int getDepth() {
		return depth;
	}

	public String toString()
	{
		String returnString = "@plan P"+this.getIDNumber();
		returnString = returnString+"\n\t@handles "+this.handleGoal;
		returnString = returnString+"\n\t@pre "+this.isPreState()+";";
		returnString = returnString+"\n\t@initPre "+this.isInitPreState()+";";
		if(bodySpace.size()>0)
		{
			returnString= returnString +"\n\t@body ";
			for(int i =0; bodySpace.size()>i;i++)
			{
				returnString = returnString +bodySpace.elementAt(i).toNameString()+ " ";
			}
		}
		return returnString;
		
		
	}
	
	public String toNameString()
	{
		return toString();
		
	}

	public void setHandleGoal(String handleGoal) {
		this.handleGoal = handleGoal;
	}

	public String getHandleGoal() {
		return handleGoal;
	}

	public void setPreState(boolean preState) {
		this.preState = preState;
	}

	public boolean isPreState() {
		return preState;
	}

	public void setInitPreState(boolean initPreState) {
		this.initPreState = initPreState;
	}

	public boolean isInitPreState() {
		return initPreState;
	}

	public void removeElementFromBody(TreeGenElement removeMe)
	{
		this.bodySpace.remove(removeMe);
	}

	public Vector<TreeGenElement> getBodySpace() 
	{
		return bodySpace;
	}
	
	public void setBodySpace(Vector<TreeGenElement> newSpace)
	{
		this.bodySpace = newSpace;
	}
	
	public void addObjectToBody(TreeGenElement addMe)
	{
		this.bodySpace.add(addMe);
	}
	
	public int getBodySize()
	{
		return this.bodySpace.size();
	}
	
	public boolean equals(Object o)
	{
		if(o instanceof Plan)
		{
			Plan compareTo  = (Plan)o;
			if(compareTo.getIDNumber().equals(this.getIDNumber()))
			{
				return true;
			}
		}
		return false;
	}
}
